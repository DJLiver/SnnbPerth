#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpectralNetCollector.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SNNB")]
	public partial class SNDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMetricMonitor(MetricMonitor instance);
    partial void UpdateMetricMonitor(MetricMonitor instance);
    partial void DeleteMetricMonitor(MetricMonitor instance);
    partial void InsertTarget(Target instance);
    partial void UpdateTarget(Target instance);
    partial void DeleteTarget(Target instance);
    partial void InsertMetricEvent(MetricEvent instance);
    partial void UpdateMetricEvent(MetricEvent instance);
    partial void DeleteMetricEvent(MetricEvent instance);
    partial void InsertMetricConfig(MetricConfig instance);
    partial void UpdateMetricConfig(MetricConfig instance);
    partial void DeleteMetricConfig(MetricConfig instance);
    partial void InsertRangeConfig(RangeConfig instance);
    partial void UpdateRangeConfig(RangeConfig instance);
    partial void DeleteRangeConfig(RangeConfig instance);
    partial void InsertFormatConfig(FormatConfig instance);
    partial void UpdateFormatConfig(FormatConfig instance);
    partial void DeleteFormatConfig(FormatConfig instance);
    partial void InsertMetricAlarm(MetricAlarm instance);
    partial void UpdateMetricAlarm(MetricAlarm instance);
    partial void DeleteMetricAlarm(MetricAlarm instance);
    partial void InsertDatabaseMaint(DatabaseMaint instance);
    partial void UpdateDatabaseMaint(DatabaseMaint instance);
    partial void DeleteDatabaseMaint(DatabaseMaint instance);
    partial void InsertMetricCount(MetricCount instance);
    partial void UpdateMetricCount(MetricCount instance);
    partial void DeleteMetricCount(MetricCount instance);
    partial void InsertMetricSite1Summary(MetricSite1Summary instance);
    partial void UpdateMetricSite1Summary(MetricSite1Summary instance);
    partial void DeleteMetricSite1Summary(MetricSite1Summary instance);
    partial void InsertMetricSite2Summary(MetricSite2Summary instance);
    partial void UpdateMetricSite2Summary(MetricSite2Summary instance);
    partial void DeleteMetricSite2Summary(MetricSite2Summary instance);
    #endregion
		
		public SNDataClassesDataContext() : 
				base(global::SpectralNetCollector.Properties.Settings.Default.SNNBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SNDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SNDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SNDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SNDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MetricMonitor> MetricMonitors
		{
			get
			{
				return this.GetTable<MetricMonitor>();
			}
		}
		
		public System.Data.Linq.Table<Target> Targets
		{
			get
			{
				return this.GetTable<Target>();
			}
		}
		
		public System.Data.Linq.Table<MetricEvent> MetricEvents
		{
			get
			{
				return this.GetTable<MetricEvent>();
			}
		}
		
		public System.Data.Linq.Table<MetricConfig> MetricConfigs
		{
			get
			{
				return this.GetTable<MetricConfig>();
			}
		}
		
		public System.Data.Linq.Table<RangeConfig> RangeConfigs
		{
			get
			{
				return this.GetTable<RangeConfig>();
			}
		}
		
		public System.Data.Linq.Table<FormatConfig> FormatConfigs
		{
			get
			{
				return this.GetTable<FormatConfig>();
			}
		}
		
		public System.Data.Linq.Table<MetricAlarm> MetricAlarms
		{
			get
			{
				return this.GetTable<MetricAlarm>();
			}
		}
		
		public System.Data.Linq.Table<DatabaseMaint> DatabaseMaints
		{
			get
			{
				return this.GetTable<DatabaseMaint>();
			}
		}
		
		public System.Data.Linq.Table<MetricCount> MetricCounts
		{
			get
			{
				return this.GetTable<MetricCount>();
			}
		}
		
		public System.Data.Linq.Table<MetricSite1Summary> MetricSite1Summaries
		{
			get
			{
				return this.GetTable<MetricSite1Summary>();
			}
		}
		
		public System.Data.Linq.Table<MetricSite2Summary> MetricSite2Summaries
		{
			get
			{
				return this.GetTable<MetricSite2Summary>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricMonitor")]
	public partial class MetricMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _Target;
		
		private double _MaxInputRfPort1AdcSaturation;
		
		private double _MaxInputRfPort1AdcSaturationPercent;
		
		private double _MaxInputRfPort1Power;
		
		private double _MaxOutputRfPort1AdcSaturation;
		
		private double _MaxOutputRfPort1AdcSaturationPercent;
		
		private double _MaxOutputRfPort1Power;
		
		private double _MinInputRfPort1AdcSaturation;
		
		private double _MinInputRfPort1AdcSaturationPercent;
		
		private double _MinInputRfPort1Power;
		
		private double _MinOutputRfPort1AdcSaturation;
		
		private double _MinOutputRfPort1AdcSaturationPercent;
		
		private double _MinOutputRfPort1Power;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnMaxInputRfPort1AdcSaturationChanging(double value);
    partial void OnMaxInputRfPort1AdcSaturationChanged();
    partial void OnMaxInputRfPort1AdcSaturationPercentChanging(double value);
    partial void OnMaxInputRfPort1AdcSaturationPercentChanged();
    partial void OnMaxInputRfPort1PowerChanging(double value);
    partial void OnMaxInputRfPort1PowerChanged();
    partial void OnMaxOutputRfPort1AdcSaturationChanging(double value);
    partial void OnMaxOutputRfPort1AdcSaturationChanged();
    partial void OnMaxOutputRfPort1AdcSaturationPercentChanging(double value);
    partial void OnMaxOutputRfPort1AdcSaturationPercentChanged();
    partial void OnMaxOutputRfPort1PowerChanging(double value);
    partial void OnMaxOutputRfPort1PowerChanged();
    partial void OnMinInputRfPort1AdcSaturationChanging(double value);
    partial void OnMinInputRfPort1AdcSaturationChanged();
    partial void OnMinInputRfPort1AdcSaturationPercentChanging(double value);
    partial void OnMinInputRfPort1AdcSaturationPercentChanged();
    partial void OnMinInputRfPort1PowerChanging(double value);
    partial void OnMinInputRfPort1PowerChanged();
    partial void OnMinOutputRfPort1AdcSaturationChanging(double value);
    partial void OnMinOutputRfPort1AdcSaturationChanged();
    partial void OnMinOutputRfPort1AdcSaturationPercentChanging(double value);
    partial void OnMinOutputRfPort1AdcSaturationPercentChanged();
    partial void OnMinOutputRfPort1PowerChanging(double value);
    partial void OnMinOutputRfPort1PowerChanged();
    #endregion
		
		public MetricMonitor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxInputRfPort1AdcSaturation", DbType="Float NOT NULL")]
		public double MaxInputRfPort1AdcSaturation
		{
			get
			{
				return this._MaxInputRfPort1AdcSaturation;
			}
			set
			{
				if ((this._MaxInputRfPort1AdcSaturation != value))
				{
					this.OnMaxInputRfPort1AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._MaxInputRfPort1AdcSaturation = value;
					this.SendPropertyChanged("MaxInputRfPort1AdcSaturation");
					this.OnMaxInputRfPort1AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxInputRfPort1AdcSaturationPercent", DbType="Float NOT NULL")]
		public double MaxInputRfPort1AdcSaturationPercent
		{
			get
			{
				return this._MaxInputRfPort1AdcSaturationPercent;
			}
			set
			{
				if ((this._MaxInputRfPort1AdcSaturationPercent != value))
				{
					this.OnMaxInputRfPort1AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._MaxInputRfPort1AdcSaturationPercent = value;
					this.SendPropertyChanged("MaxInputRfPort1AdcSaturationPercent");
					this.OnMaxInputRfPort1AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxInputRfPort1Power", DbType="Float NOT NULL")]
		public double MaxInputRfPort1Power
		{
			get
			{
				return this._MaxInputRfPort1Power;
			}
			set
			{
				if ((this._MaxInputRfPort1Power != value))
				{
					this.OnMaxInputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._MaxInputRfPort1Power = value;
					this.SendPropertyChanged("MaxInputRfPort1Power");
					this.OnMaxInputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOutputRfPort1AdcSaturation", DbType="Float NOT NULL")]
		public double MaxOutputRfPort1AdcSaturation
		{
			get
			{
				return this._MaxOutputRfPort1AdcSaturation;
			}
			set
			{
				if ((this._MaxOutputRfPort1AdcSaturation != value))
				{
					this.OnMaxOutputRfPort1AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._MaxOutputRfPort1AdcSaturation = value;
					this.SendPropertyChanged("MaxOutputRfPort1AdcSaturation");
					this.OnMaxOutputRfPort1AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOutputRfPort1AdcSaturationPercent", DbType="Float NOT NULL")]
		public double MaxOutputRfPort1AdcSaturationPercent
		{
			get
			{
				return this._MaxOutputRfPort1AdcSaturationPercent;
			}
			set
			{
				if ((this._MaxOutputRfPort1AdcSaturationPercent != value))
				{
					this.OnMaxOutputRfPort1AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._MaxOutputRfPort1AdcSaturationPercent = value;
					this.SendPropertyChanged("MaxOutputRfPort1AdcSaturationPercent");
					this.OnMaxOutputRfPort1AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOutputRfPort1Power", DbType="Float NOT NULL")]
		public double MaxOutputRfPort1Power
		{
			get
			{
				return this._MaxOutputRfPort1Power;
			}
			set
			{
				if ((this._MaxOutputRfPort1Power != value))
				{
					this.OnMaxOutputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._MaxOutputRfPort1Power = value;
					this.SendPropertyChanged("MaxOutputRfPort1Power");
					this.OnMaxOutputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinInputRfPort1AdcSaturation", DbType="Float NOT NULL")]
		public double MinInputRfPort1AdcSaturation
		{
			get
			{
				return this._MinInputRfPort1AdcSaturation;
			}
			set
			{
				if ((this._MinInputRfPort1AdcSaturation != value))
				{
					this.OnMinInputRfPort1AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._MinInputRfPort1AdcSaturation = value;
					this.SendPropertyChanged("MinInputRfPort1AdcSaturation");
					this.OnMinInputRfPort1AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinInputRfPort1AdcSaturationPercent", DbType="Float NOT NULL")]
		public double MinInputRfPort1AdcSaturationPercent
		{
			get
			{
				return this._MinInputRfPort1AdcSaturationPercent;
			}
			set
			{
				if ((this._MinInputRfPort1AdcSaturationPercent != value))
				{
					this.OnMinInputRfPort1AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._MinInputRfPort1AdcSaturationPercent = value;
					this.SendPropertyChanged("MinInputRfPort1AdcSaturationPercent");
					this.OnMinInputRfPort1AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinInputRfPort1Power", DbType="Float NOT NULL")]
		public double MinInputRfPort1Power
		{
			get
			{
				return this._MinInputRfPort1Power;
			}
			set
			{
				if ((this._MinInputRfPort1Power != value))
				{
					this.OnMinInputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._MinInputRfPort1Power = value;
					this.SendPropertyChanged("MinInputRfPort1Power");
					this.OnMinInputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOutputRfPort1AdcSaturation", DbType="Float NOT NULL")]
		public double MinOutputRfPort1AdcSaturation
		{
			get
			{
				return this._MinOutputRfPort1AdcSaturation;
			}
			set
			{
				if ((this._MinOutputRfPort1AdcSaturation != value))
				{
					this.OnMinOutputRfPort1AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._MinOutputRfPort1AdcSaturation = value;
					this.SendPropertyChanged("MinOutputRfPort1AdcSaturation");
					this.OnMinOutputRfPort1AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOutputRfPort1AdcSaturationPercent", DbType="Float NOT NULL")]
		public double MinOutputRfPort1AdcSaturationPercent
		{
			get
			{
				return this._MinOutputRfPort1AdcSaturationPercent;
			}
			set
			{
				if ((this._MinOutputRfPort1AdcSaturationPercent != value))
				{
					this.OnMinOutputRfPort1AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._MinOutputRfPort1AdcSaturationPercent = value;
					this.SendPropertyChanged("MinOutputRfPort1AdcSaturationPercent");
					this.OnMinOutputRfPort1AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOutputRfPort1Power", DbType="Float NOT NULL")]
		public double MinOutputRfPort1Power
		{
			get
			{
				return this._MinOutputRfPort1Power;
			}
			set
			{
				if ((this._MinOutputRfPort1Power != value))
				{
					this.OnMinOutputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._MinOutputRfPort1Power = value;
					this.SendPropertyChanged("MinOutputRfPort1Power");
					this.OnMinOutputRfPort1PowerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Target")]
	public partial class Target : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _IpAddress;
		
		private string _Query;
		
		private bool _Enabled;
		
		private int _Period;
		
		private string _RemoteUnit;
		
		private string _PeerUnit;
		
		private string _Direction;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnPeriodChanging(int value);
    partial void OnPeriodChanged();
    partial void OnRemoteUnitChanging(string value);
    partial void OnRemoteUnitChanged();
    partial void OnPeerUnitChanging(string value);
    partial void OnPeerUnitChanged();
    partial void OnDirectionChanging(string value);
    partial void OnDirectionChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    #endregion
		
		public Target()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Int NOT NULL")]
		public int Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteUnit", DbType="NVarChar(50)")]
		public string RemoteUnit
		{
			get
			{
				return this._RemoteUnit;
			}
			set
			{
				if ((this._RemoteUnit != value))
				{
					this.OnRemoteUnitChanging(value);
					this.SendPropertyChanging();
					this._RemoteUnit = value;
					this.SendPropertyChanged("RemoteUnit");
					this.OnRemoteUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeerUnit", DbType="NVarChar(50)")]
		public string PeerUnit
		{
			get
			{
				return this._PeerUnit;
			}
			set
			{
				if ((this._PeerUnit != value))
				{
					this.OnPeerUnitChanging(value);
					this.SendPropertyChanging();
					this._PeerUnit = value;
					this.SendPropertyChanged("PeerUnit");
					this.OnPeerUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="NVarChar(50)")]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="NVarChar(50)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricEvents")]
	public partial class MetricEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _Target;
		
		private string _Attribute;
		
		private string _Message;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public MetricEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricConfig")]
	public partial class MetricConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _Target;
		
		private string _Attribute;
		
		private string _Message;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public MetricConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RangeConfig")]
	public partial class RangeConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit;
		
		private string _Attr;
		
		private double _Lower;
		
		private double _Upper;
		
		private bool _Enabled;
		
		private bool _InRange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnAttrChanging(string value);
    partial void OnAttrChanged();
    partial void OnLowerChanging(double value);
    partial void OnLowerChanged();
    partial void OnUpperChanging(double value);
    partial void OnUpperChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnInRangeChanging(bool value);
    partial void OnInRangeChanged();
    #endregion
		
		public RangeConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Attr
		{
			get
			{
				return this._Attr;
			}
			set
			{
				if ((this._Attr != value))
				{
					this.OnAttrChanging(value);
					this.SendPropertyChanging();
					this._Attr = value;
					this.SendPropertyChanged("Attr");
					this.OnAttrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower", DbType="Float NOT NULL")]
		public double Lower
		{
			get
			{
				return this._Lower;
			}
			set
			{
				if ((this._Lower != value))
				{
					this.OnLowerChanging(value);
					this.SendPropertyChanging();
					this._Lower = value;
					this.SendPropertyChanged("Lower");
					this.OnLowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper", DbType="Float NOT NULL")]
		public double Upper
		{
			get
			{
				return this._Upper;
			}
			set
			{
				if ((this._Upper != value))
				{
					this.OnUpperChanging(value);
					this.SendPropertyChanging();
					this._Upper = value;
					this.SendPropertyChanged("Upper");
					this.OnUpperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InRange", DbType="Bit NOT NULL")]
		public bool InRange
		{
			get
			{
				return this._InRange;
			}
			set
			{
				if ((this._InRange != value))
				{
					this.OnInRangeChanging(value);
					this.SendPropertyChanging();
					this._InRange = value;
					this.SendPropertyChanged("InRange");
					this.OnInRangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormatConfig")]
	public partial class FormatConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Attr;
		
		private string _Normal;
		
		private string _Format;
		
		private System.Nullable<int> _Scale;
		
		private string _Units;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttrChanging(string value);
    partial void OnAttrChanged();
    partial void OnNormalChanging(string value);
    partial void OnNormalChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnScaleChanging(System.Nullable<int> value);
    partial void OnScaleChanged();
    partial void OnUnitsChanging(string value);
    partial void OnUnitsChanged();
    #endregion
		
		public FormatConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr", DbType="NVarChar(50)")]
		public string Attr
		{
			get
			{
				return this._Attr;
			}
			set
			{
				if ((this._Attr != value))
				{
					this.OnAttrChanging(value);
					this.SendPropertyChanging();
					this._Attr = value;
					this.SendPropertyChanged("Attr");
					this.OnAttrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="NVarChar(50)")]
		public string Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(50)")]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scale", DbType="Int")]
		public System.Nullable<int> Scale
		{
			get
			{
				return this._Scale;
			}
			set
			{
				if ((this._Scale != value))
				{
					this.OnScaleChanging(value);
					this.SendPropertyChanging();
					this._Scale = value;
					this.SendPropertyChanged("Scale");
					this.OnScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="NVarChar(50)")]
		public string Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricAlarm")]
	public partial class MetricAlarm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _Target;
		
		private string _Attribute;
		
		private string _Message;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnAttributeChanging(string value);
    partial void OnAttributeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public MetricAlarm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attribute", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Attribute
		{
			get
			{
				return this._Attribute;
			}
			set
			{
				if ((this._Attribute != value))
				{
					this.OnAttributeChanging(value);
					this.SendPropertyChanging();
					this._Attribute = value;
					this.SendPropertyChanged("Attribute");
					this.OnAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatabaseMaint")]
	public partial class DatabaseMaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _dBTable;
		
		private int _DaysToKeep;
		
		private bool _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndBTableChanging(string value);
    partial void OndBTableChanged();
    partial void OnDaysToKeepChanging(int value);
    partial void OnDaysToKeepChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public DatabaseMaint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dBTable", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string dBTable
		{
			get
			{
				return this._dBTable;
			}
			set
			{
				if ((this._dBTable != value))
				{
					this.OndBTableChanging(value);
					this.SendPropertyChanging();
					this._dBTable = value;
					this.SendPropertyChanged("dBTable");
					this.OndBTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysToKeep", DbType="Int NOT NULL")]
		public int DaysToKeep
		{
			get
			{
				return this._DaysToKeep;
			}
			set
			{
				if ((this._DaysToKeep != value))
				{
					this.OnDaysToKeepChanging(value);
					this.SendPropertyChanging();
					this._DaysToKeep = value;
					this.SendPropertyChanged("DaysToKeep");
					this.OnDaysToKeepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricCounts")]
	public partial class MetricCount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _Target;
		
		private double _Com_discardedPackets;
		
		private double _RfOut_droppedPackets;
		
		private double _RfOut_gapCount;
		
		private double _RfOut_pfecMissingSets;
		
		private double _RfOut_pfecRepairedPackets;
		
		private double _RfOut_pfecTotalPackets;
		
		private double _RfOut_pfecUnrepairablePackets;
		
		private double _RfOut_preserveLatencyLatePackets;
		
		private double _RfOut_preserveLatencyMaxBurstLoss;
		
		private double _RfOut_preserveLatencyMissingPackets;
		
		private double _RfOut_preserveLatencyOutOfOrderPackets;
		
		private double _RfOut_underflowCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnCom_discardedPacketsChanging(double value);
    partial void OnCom_discardedPacketsChanged();
    partial void OnRfOut_droppedPacketsChanging(double value);
    partial void OnRfOut_droppedPacketsChanged();
    partial void OnRfOut_gapCountChanging(double value);
    partial void OnRfOut_gapCountChanged();
    partial void OnRfOut_pfecMissingSetsChanging(double value);
    partial void OnRfOut_pfecMissingSetsChanged();
    partial void OnRfOut_pfecRepairedPacketsChanging(double value);
    partial void OnRfOut_pfecRepairedPacketsChanged();
    partial void OnRfOut_pfecTotalPacketsChanging(double value);
    partial void OnRfOut_pfecTotalPacketsChanged();
    partial void OnRfOut_pfecUnrepairablePacketsChanging(double value);
    partial void OnRfOut_pfecUnrepairablePacketsChanged();
    partial void OnRfOut_preserveLatencyLatePacketsChanging(double value);
    partial void OnRfOut_preserveLatencyLatePacketsChanged();
    partial void OnRfOut_preserveLatencyMaxBurstLossChanging(double value);
    partial void OnRfOut_preserveLatencyMaxBurstLossChanged();
    partial void OnRfOut_preserveLatencyMissingPacketsChanging(double value);
    partial void OnRfOut_preserveLatencyMissingPacketsChanged();
    partial void OnRfOut_preserveLatencyOutOfOrderPacketsChanging(double value);
    partial void OnRfOut_preserveLatencyOutOfOrderPacketsChanged();
    partial void OnRfOut_underflowCountChanging(double value);
    partial void OnRfOut_underflowCountChanged();
    #endregion
		
		public MetricCount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com_discardedPackets", DbType="Float NOT NULL")]
		public double Com_discardedPackets
		{
			get
			{
				return this._Com_discardedPackets;
			}
			set
			{
				if ((this._Com_discardedPackets != value))
				{
					this.OnCom_discardedPacketsChanging(value);
					this.SendPropertyChanging();
					this._Com_discardedPackets = value;
					this.SendPropertyChanged("Com_discardedPackets");
					this.OnCom_discardedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_droppedPackets", DbType="Float NOT NULL")]
		public double RfOut_droppedPackets
		{
			get
			{
				return this._RfOut_droppedPackets;
			}
			set
			{
				if ((this._RfOut_droppedPackets != value))
				{
					this.OnRfOut_droppedPacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_droppedPackets = value;
					this.SendPropertyChanged("RfOut_droppedPackets");
					this.OnRfOut_droppedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_gapCount", DbType="Float NOT NULL")]
		public double RfOut_gapCount
		{
			get
			{
				return this._RfOut_gapCount;
			}
			set
			{
				if ((this._RfOut_gapCount != value))
				{
					this.OnRfOut_gapCountChanging(value);
					this.SendPropertyChanging();
					this._RfOut_gapCount = value;
					this.SendPropertyChanged("RfOut_gapCount");
					this.OnRfOut_gapCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_pfecMissingSets", DbType="Float NOT NULL")]
		public double RfOut_pfecMissingSets
		{
			get
			{
				return this._RfOut_pfecMissingSets;
			}
			set
			{
				if ((this._RfOut_pfecMissingSets != value))
				{
					this.OnRfOut_pfecMissingSetsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_pfecMissingSets = value;
					this.SendPropertyChanged("RfOut_pfecMissingSets");
					this.OnRfOut_pfecMissingSetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_pfecRepairedPackets", DbType="Float NOT NULL")]
		public double RfOut_pfecRepairedPackets
		{
			get
			{
				return this._RfOut_pfecRepairedPackets;
			}
			set
			{
				if ((this._RfOut_pfecRepairedPackets != value))
				{
					this.OnRfOut_pfecRepairedPacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_pfecRepairedPackets = value;
					this.SendPropertyChanged("RfOut_pfecRepairedPackets");
					this.OnRfOut_pfecRepairedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_pfecTotalPackets", DbType="Float NOT NULL")]
		public double RfOut_pfecTotalPackets
		{
			get
			{
				return this._RfOut_pfecTotalPackets;
			}
			set
			{
				if ((this._RfOut_pfecTotalPackets != value))
				{
					this.OnRfOut_pfecTotalPacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_pfecTotalPackets = value;
					this.SendPropertyChanged("RfOut_pfecTotalPackets");
					this.OnRfOut_pfecTotalPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_pfecUnrepairablePackets", DbType="Float NOT NULL")]
		public double RfOut_pfecUnrepairablePackets
		{
			get
			{
				return this._RfOut_pfecUnrepairablePackets;
			}
			set
			{
				if ((this._RfOut_pfecUnrepairablePackets != value))
				{
					this.OnRfOut_pfecUnrepairablePacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_pfecUnrepairablePackets = value;
					this.SendPropertyChanged("RfOut_pfecUnrepairablePackets");
					this.OnRfOut_pfecUnrepairablePacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_preserveLatencyLatePackets", DbType="Float NOT NULL")]
		public double RfOut_preserveLatencyLatePackets
		{
			get
			{
				return this._RfOut_preserveLatencyLatePackets;
			}
			set
			{
				if ((this._RfOut_preserveLatencyLatePackets != value))
				{
					this.OnRfOut_preserveLatencyLatePacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_preserveLatencyLatePackets = value;
					this.SendPropertyChanged("RfOut_preserveLatencyLatePackets");
					this.OnRfOut_preserveLatencyLatePacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_preserveLatencyMaxBurstLoss", DbType="Float NOT NULL")]
		public double RfOut_preserveLatencyMaxBurstLoss
		{
			get
			{
				return this._RfOut_preserveLatencyMaxBurstLoss;
			}
			set
			{
				if ((this._RfOut_preserveLatencyMaxBurstLoss != value))
				{
					this.OnRfOut_preserveLatencyMaxBurstLossChanging(value);
					this.SendPropertyChanging();
					this._RfOut_preserveLatencyMaxBurstLoss = value;
					this.SendPropertyChanged("RfOut_preserveLatencyMaxBurstLoss");
					this.OnRfOut_preserveLatencyMaxBurstLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_preserveLatencyMissingPackets", DbType="Float NOT NULL")]
		public double RfOut_preserveLatencyMissingPackets
		{
			get
			{
				return this._RfOut_preserveLatencyMissingPackets;
			}
			set
			{
				if ((this._RfOut_preserveLatencyMissingPackets != value))
				{
					this.OnRfOut_preserveLatencyMissingPacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_preserveLatencyMissingPackets = value;
					this.SendPropertyChanged("RfOut_preserveLatencyMissingPackets");
					this.OnRfOut_preserveLatencyMissingPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_preserveLatencyOutOfOrderPackets", DbType="Float NOT NULL")]
		public double RfOut_preserveLatencyOutOfOrderPackets
		{
			get
			{
				return this._RfOut_preserveLatencyOutOfOrderPackets;
			}
			set
			{
				if ((this._RfOut_preserveLatencyOutOfOrderPackets != value))
				{
					this.OnRfOut_preserveLatencyOutOfOrderPacketsChanging(value);
					this.SendPropertyChanging();
					this._RfOut_preserveLatencyOutOfOrderPackets = value;
					this.SendPropertyChanged("RfOut_preserveLatencyOutOfOrderPackets");
					this.OnRfOut_preserveLatencyOutOfOrderPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RfOut_underflowCount", DbType="Float NOT NULL")]
		public double RfOut_underflowCount
		{
			get
			{
				return this._RfOut_underflowCount;
			}
			set
			{
				if ((this._RfOut_underflowCount != value))
				{
					this.OnRfOut_underflowCountChanging(value);
					this.SendPropertyChanging();
					this._RfOut_underflowCount = value;
					this.SendPropertyChanged("RfOut_underflowCount");
					this.OnRfOut_underflowCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricSite1Summary")]
	public partial class MetricSite1Summary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _ExtDateStamp;
		
		private string _ExtSourceUnit;
		
		private string _ExtDestUnit;
		
		private string _ExtDirection;
		
		private System.Nullable<int> _ExtDisplayOrder;
		
		private System.Nullable<bool> _ExtCommError;
		
		private System.Nullable<bool> _ComActive;
		
		private string _ComAddress;
		
		private string _ComCompositeStatus;
		
		private string _ComCompositeStatusMsg;
		
		private string _ComContextPacketState;
		
		private System.Nullable<double> _ComcurrentGain;
		
		private System.Nullable<int> _ComdiscardedPackets;
		
		private System.Nullable<bool> _ComenableMulticastGroupSubscriptions;
		
		private System.Nullable<int> _ComfanSpeed;
		
		private string _ComgainMode;
		
		private string _Comgateway;
		
		private string _ComhealthStatus;
		
		private string _ComhealthStatusMsg;
		
		private System.Nullable<double> _CominputRfAdcSaturation;
		
		private System.Nullable<double> _CominputRfAdcSaturationPercent;
		
		private string _CominputRfBandwidth;
		
		private System.Nullable<double> _CominputRfCenterFrequency;
		
		private System.Nullable<double> _CominputRfPort1AdcSaturation;
		
		private System.Nullable<double> _CominputRfPort1AdcSaturationPercent;
		
		private System.Nullable<double> _CominputRfPort1MinimumGain;
		
		private System.Nullable<double> _CominputRfPort1Power;
		
		private System.Nullable<double> _CominputRfPort2AdcSaturation;
		
		private System.Nullable<double> _CominputRfPort2AdcSaturationPercent;
		
		private System.Nullable<double> _CominputRfPort2MinimumGain;
		
		private System.Nullable<double> _CominputRfPort2Power;
		
		private string _CominputRfPortSelect;
		
		private System.Nullable<double> _CominputRfPower;
		
		private System.Nullable<double> _CominputRfSampleRate;
		
		private System.Nullable<bool> _CominvertRfOutputSpectrum;
		
		private System.Nullable<bool> _ComirigDcLocked;
		
		private System.Nullable<bool> _ComirigLocked;
		
		private string _Comlabel;
		
		private string _ComlogLevel;
		
		private System.Nullable<double> _CommanualGain;
		
		private System.Nullable<double> _ComminimumGain;
		
		private string _CommoduleState;
		
		private string _CommoduleType;
		
		private string _ComntpStatus;
		
		private System.Nullable<bool> _ComonePpsPresent;
		
		private System.Nullable<double> _ComoutputAttenuation;
		
		private System.Nullable<double> _ComoutputRfCenterFrequency;
		
		private System.Nullable<double> _ComoutputRfDacSaturation;
		
		private System.Nullable<double> _ComoutputRfDacSaturationPercent;
		
		private System.Nullable<double> _ComoutputRfPort1DacSaturation;
		
		private System.Nullable<double> _ComoutputRfPort1DacSaturationPercent;
		
		private System.Nullable<double> _ComoutputRfPort1Power;
		
		private System.Nullable<double> _ComoutputRfPort2DacSaturation;
		
		private System.Nullable<double> _ComoutputRfPort2DacSaturationPercent;
		
		private System.Nullable<double> _ComoutputRfPort2Power;
		
		private string _ComoutputRfPortSelect;
		
		private System.Nullable<double> _ComoutputRfPower;
		
		private System.Nullable<double> _ComoverrideOutputFrequency;
		
		private System.Nullable<bool> _ComoverrideOutputFrequencyEnable;
		
		private System.Nullable<int> _CompollInterval;
		
		private System.Nullable<int> _ComposixNanoseconds;
		
		private System.Nullable<int> _ComposixSeconds;
		
		private System.Nullable<bool> _ComrebootRequired;
		
		private string _ComReplyWaitTime;
		
		private string _ComRequiredReadPrivilege;
		
		private string _ComRequiredWritePrivilege;
		
		private System.Nullable<bool> _ComRfOutputEnable;
		
		private string _ComRfOutputSource;
		
		private string _ComSecuritySource;
		
		private string _ComSerialNumber;
		
		private string _ComShortDescription;
		
		private System.Nullable<bool> _ComSimulate;
		
		private System.Nullable<bool> _ComSquelchEnabled;
		
		private System.Nullable<int> _ComSystemTemperature;
		
		private string _ComSystemTimeSource;
		
		private System.Nullable<bool> _ComTenMhzLocked;
		
		private string _ComVersion;
		
		private string _RFinname;
		
		private System.Nullable<double> _RFinbitRate;
		
		private System.Nullable<int> _RFindataSampleWidth;
		
		private string _RFindestinationHost;
		
		private System.Nullable<int> _RFindestinationPort;
		
		private System.Nullable<double> _RFinfrequencyOffset;
		
		private System.Nullable<double> _RFinmaximumPacketSize;
		
		private System.Nullable<double> _RFinmeasuredNetworkRate;
		
		private System.Nullable<double> _RFinmeasuredPacketRate;
		
		private System.Nullable<double> _RFinminimumProcessingDelay;
		
		private System.Nullable<double> _RFinpacketOverhead;
		
		private System.Nullable<bool> _RFinpfecEnable;
		
		private string _RFinrouteSearch;
		
		private System.Nullable<int> _RFinsourcePort;
		
		private System.Nullable<double> _RFinstreamBandwidth;
		
		private System.Nullable<bool> _RFinstreamEnable;
		
		private System.Nullable<double> _RFinstreamGain;
		
		private System.Nullable<int> _RFinstreamId;
		
		private System.Nullable<double> _RFinstreamSampleRate;
		
		private string _RFoutname;
		
		private System.Nullable<double> _RFoutcurrentBuffer;
		
		private System.Nullable<int> _RFoutdataSampleWidth;
		
		private string _RFoutdataSource;
		
		private System.Nullable<double> _RFoutdesiredBuffer;
		
		private System.Nullable<double> _RFoutdesiredDelay;
		
		private System.Nullable<int> _RFoutdestinationPort;
		
		private System.Nullable<int> _RFoutdroppedPackets;
		
		private System.Nullable<double> _RFoutfrequencyOffset;
		
		private System.Nullable<int> _RFoutgapCount;
		
		private System.Nullable<double> _RFoutmeasuredDelay;
		
		private System.Nullable<double> _RFoutmeasuredNetworkRate;
		
		private System.Nullable<double> _RFoutmeasuredPacketRate;
		
		private System.Nullable<double> _RFoutnetStreamGain;
		
		private System.Nullable<double> _RFoutnetworkDelay;
		
		private System.Nullable<double> _RFoutpacketOverhead;
		
		private string _RFoutpfecDecoderStatus;
		
		private System.Nullable<int> _RFoutpfecMissingSets;
		
		private System.Nullable<int> _RFoutpfecRepairedPackets;
		
		private System.Nullable<int> _RFoutpfecTotalPackets;
		
		private System.Nullable<int> _RFoutpfecUnrepairablePackets;
		
		private System.Nullable<bool> _RFoutpreserveLatency;
		
		private System.Nullable<int> _RFoutpreserveLatencyLatePackets;
		
		private System.Nullable<int> _RFoutpreserveLatencyMaxBurstLoss;
		
		private System.Nullable<int> _RFoutpreserveLatencyMissingPackets;
		
		private System.Nullable<int> _RFoutpreserveLatencyOutOfOrderPackets;
		
		private System.Nullable<int> _RFoutpreserveLatencyReleaseMargin;
		
		private string _RFoutreleaseMode;
		
		private string _RFoutsourceHost;
		
		private System.Nullable<int> _RFoutsourcePort;
		
		private System.Nullable<double> _RFoutstreamBandwidth;
		
		private System.Nullable<bool> _RFoutstreamEnable;
		
		private System.Nullable<int> _RFoutstreamId;
		
		private System.Nullable<double> _RFoutstreamSampleRate;
		
		private System.Nullable<int> _RFoutunderflowCount;
		
		private System.Nullable<bool> _RFoutupstreamIrigLocked;
		
		private System.Nullable<bool> _RFoutupstreamOnePpsLocked;
		
		private System.Nullable<double> _RFoutupstreamPathGain;
		
		private System.Nullable<bool> _RFoutupstreamTenMhzLocked;
		
		private System.Nullable<bool> _RFoutuseLocalReference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnExtDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnExtDateStampChanged();
    partial void OnExtSourceUnitChanging(string value);
    partial void OnExtSourceUnitChanged();
    partial void OnExtDestUnitChanging(string value);
    partial void OnExtDestUnitChanged();
    partial void OnExtDirectionChanging(string value);
    partial void OnExtDirectionChanged();
    partial void OnExtDisplayOrderChanging(System.Nullable<int> value);
    partial void OnExtDisplayOrderChanged();
    partial void OnExtCommErrorChanging(System.Nullable<bool> value);
    partial void OnExtCommErrorChanged();
    partial void OnComActiveChanging(System.Nullable<bool> value);
    partial void OnComActiveChanged();
    partial void OnComAddressChanging(string value);
    partial void OnComAddressChanged();
    partial void OnComCompositeStatusChanging(string value);
    partial void OnComCompositeStatusChanged();
    partial void OnComCompositeStatusMsgChanging(string value);
    partial void OnComCompositeStatusMsgChanged();
    partial void OnComContextPacketStateChanging(string value);
    partial void OnComContextPacketStateChanged();
    partial void OnComcurrentGainChanging(System.Nullable<double> value);
    partial void OnComcurrentGainChanged();
    partial void OnComdiscardedPacketsChanging(System.Nullable<int> value);
    partial void OnComdiscardedPacketsChanged();
    partial void OnComenableMulticastGroupSubscriptionsChanging(System.Nullable<bool> value);
    partial void OnComenableMulticastGroupSubscriptionsChanged();
    partial void OnComfanSpeedChanging(System.Nullable<int> value);
    partial void OnComfanSpeedChanged();
    partial void OnComgainModeChanging(string value);
    partial void OnComgainModeChanged();
    partial void OnComgatewayChanging(string value);
    partial void OnComgatewayChanged();
    partial void OnComhealthStatusChanging(string value);
    partial void OnComhealthStatusChanged();
    partial void OnComhealthStatusMsgChanging(string value);
    partial void OnComhealthStatusMsgChanged();
    partial void OnCominputRfAdcSaturationChanging(System.Nullable<double> value);
    partial void OnCominputRfAdcSaturationChanged();
    partial void OnCominputRfAdcSaturationPercentChanging(System.Nullable<double> value);
    partial void OnCominputRfAdcSaturationPercentChanged();
    partial void OnCominputRfBandwidthChanging(string value);
    partial void OnCominputRfBandwidthChanged();
    partial void OnCominputRfCenterFrequencyChanging(System.Nullable<double> value);
    partial void OnCominputRfCenterFrequencyChanged();
    partial void OnCominputRfPort1AdcSaturationChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1AdcSaturationChanged();
    partial void OnCominputRfPort1AdcSaturationPercentChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1AdcSaturationPercentChanged();
    partial void OnCominputRfPort1MinimumGainChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1MinimumGainChanged();
    partial void OnCominputRfPort1PowerChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1PowerChanged();
    partial void OnCominputRfPort2AdcSaturationChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2AdcSaturationChanged();
    partial void OnCominputRfPort2AdcSaturationPercentChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2AdcSaturationPercentChanged();
    partial void OnCominputRfPort2MinimumGainChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2MinimumGainChanged();
    partial void OnCominputRfPort2PowerChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2PowerChanged();
    partial void OnCominputRfPortSelectChanging(string value);
    partial void OnCominputRfPortSelectChanged();
    partial void OnCominputRfPowerChanging(System.Nullable<double> value);
    partial void OnCominputRfPowerChanged();
    partial void OnCominputRfSampleRateChanging(System.Nullable<double> value);
    partial void OnCominputRfSampleRateChanged();
    partial void OnCominvertRfOutputSpectrumChanging(System.Nullable<bool> value);
    partial void OnCominvertRfOutputSpectrumChanged();
    partial void OnComirigDcLockedChanging(System.Nullable<bool> value);
    partial void OnComirigDcLockedChanged();
    partial void OnComirigLockedChanging(System.Nullable<bool> value);
    partial void OnComirigLockedChanged();
    partial void OnComlabelChanging(string value);
    partial void OnComlabelChanged();
    partial void OnComlogLevelChanging(string value);
    partial void OnComlogLevelChanged();
    partial void OnCommanualGainChanging(System.Nullable<double> value);
    partial void OnCommanualGainChanged();
    partial void OnComminimumGainChanging(System.Nullable<double> value);
    partial void OnComminimumGainChanged();
    partial void OnCommoduleStateChanging(string value);
    partial void OnCommoduleStateChanged();
    partial void OnCommoduleTypeChanging(string value);
    partial void OnCommoduleTypeChanged();
    partial void OnComntpStatusChanging(string value);
    partial void OnComntpStatusChanged();
    partial void OnComonePpsPresentChanging(System.Nullable<bool> value);
    partial void OnComonePpsPresentChanged();
    partial void OnComoutputAttenuationChanging(System.Nullable<double> value);
    partial void OnComoutputAttenuationChanged();
    partial void OnComoutputRfCenterFrequencyChanging(System.Nullable<double> value);
    partial void OnComoutputRfCenterFrequencyChanged();
    partial void OnComoutputRfDacSaturationChanging(System.Nullable<double> value);
    partial void OnComoutputRfDacSaturationChanged();
    partial void OnComoutputRfDacSaturationPercentChanging(System.Nullable<double> value);
    partial void OnComoutputRfDacSaturationPercentChanged();
    partial void OnComoutputRfPort1DacSaturationChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort1DacSaturationChanged();
    partial void OnComoutputRfPort1DacSaturationPercentChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort1DacSaturationPercentChanged();
    partial void OnComoutputRfPort1PowerChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort1PowerChanged();
    partial void OnComoutputRfPort2DacSaturationChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort2DacSaturationChanged();
    partial void OnComoutputRfPort2DacSaturationPercentChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort2DacSaturationPercentChanged();
    partial void OnComoutputRfPort2PowerChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort2PowerChanged();
    partial void OnComoutputRfPortSelectChanging(string value);
    partial void OnComoutputRfPortSelectChanged();
    partial void OnComoutputRfPowerChanging(System.Nullable<double> value);
    partial void OnComoutputRfPowerChanged();
    partial void OnComoverrideOutputFrequencyChanging(System.Nullable<double> value);
    partial void OnComoverrideOutputFrequencyChanged();
    partial void OnComoverrideOutputFrequencyEnableChanging(System.Nullable<bool> value);
    partial void OnComoverrideOutputFrequencyEnableChanged();
    partial void OnCompollIntervalChanging(System.Nullable<int> value);
    partial void OnCompollIntervalChanged();
    partial void OnComposixNanosecondsChanging(System.Nullable<int> value);
    partial void OnComposixNanosecondsChanged();
    partial void OnComposixSecondsChanging(System.Nullable<int> value);
    partial void OnComposixSecondsChanged();
    partial void OnComrebootRequiredChanging(System.Nullable<bool> value);
    partial void OnComrebootRequiredChanged();
    partial void OnComReplyWaitTimeChanging(string value);
    partial void OnComReplyWaitTimeChanged();
    partial void OnComRequiredReadPrivilegeChanging(string value);
    partial void OnComRequiredReadPrivilegeChanged();
    partial void OnComRequiredWritePrivilegeChanging(string value);
    partial void OnComRequiredWritePrivilegeChanged();
    partial void OnComRfOutputEnableChanging(System.Nullable<bool> value);
    partial void OnComRfOutputEnableChanged();
    partial void OnComRfOutputSourceChanging(string value);
    partial void OnComRfOutputSourceChanged();
    partial void OnComSecuritySourceChanging(string value);
    partial void OnComSecuritySourceChanged();
    partial void OnComSerialNumberChanging(string value);
    partial void OnComSerialNumberChanged();
    partial void OnComShortDescriptionChanging(string value);
    partial void OnComShortDescriptionChanged();
    partial void OnComSimulateChanging(System.Nullable<bool> value);
    partial void OnComSimulateChanged();
    partial void OnComSquelchEnabledChanging(System.Nullable<bool> value);
    partial void OnComSquelchEnabledChanged();
    partial void OnComSystemTemperatureChanging(System.Nullable<int> value);
    partial void OnComSystemTemperatureChanged();
    partial void OnComSystemTimeSourceChanging(string value);
    partial void OnComSystemTimeSourceChanged();
    partial void OnComTenMhzLockedChanging(System.Nullable<bool> value);
    partial void OnComTenMhzLockedChanged();
    partial void OnComVersionChanging(string value);
    partial void OnComVersionChanged();
    partial void OnRFinnameChanging(string value);
    partial void OnRFinnameChanged();
    partial void OnRFinbitRateChanging(System.Nullable<double> value);
    partial void OnRFinbitRateChanged();
    partial void OnRFindataSampleWidthChanging(System.Nullable<int> value);
    partial void OnRFindataSampleWidthChanged();
    partial void OnRFindestinationHostChanging(string value);
    partial void OnRFindestinationHostChanged();
    partial void OnRFindestinationPortChanging(System.Nullable<int> value);
    partial void OnRFindestinationPortChanged();
    partial void OnRFinfrequencyOffsetChanging(System.Nullable<double> value);
    partial void OnRFinfrequencyOffsetChanged();
    partial void OnRFinmaximumPacketSizeChanging(System.Nullable<double> value);
    partial void OnRFinmaximumPacketSizeChanged();
    partial void OnRFinmeasuredNetworkRateChanging(System.Nullable<double> value);
    partial void OnRFinmeasuredNetworkRateChanged();
    partial void OnRFinmeasuredPacketRateChanging(System.Nullable<double> value);
    partial void OnRFinmeasuredPacketRateChanged();
    partial void OnRFinminimumProcessingDelayChanging(System.Nullable<double> value);
    partial void OnRFinminimumProcessingDelayChanged();
    partial void OnRFinpacketOverheadChanging(System.Nullable<double> value);
    partial void OnRFinpacketOverheadChanged();
    partial void OnRFinpfecEnableChanging(System.Nullable<bool> value);
    partial void OnRFinpfecEnableChanged();
    partial void OnRFinrouteSearchChanging(string value);
    partial void OnRFinrouteSearchChanged();
    partial void OnRFinsourcePortChanging(System.Nullable<int> value);
    partial void OnRFinsourcePortChanged();
    partial void OnRFinstreamBandwidthChanging(System.Nullable<double> value);
    partial void OnRFinstreamBandwidthChanged();
    partial void OnRFinstreamEnableChanging(System.Nullable<bool> value);
    partial void OnRFinstreamEnableChanged();
    partial void OnRFinstreamGainChanging(System.Nullable<double> value);
    partial void OnRFinstreamGainChanged();
    partial void OnRFinstreamIdChanging(System.Nullable<int> value);
    partial void OnRFinstreamIdChanged();
    partial void OnRFinstreamSampleRateChanging(System.Nullable<double> value);
    partial void OnRFinstreamSampleRateChanged();
    partial void OnRFoutnameChanging(string value);
    partial void OnRFoutnameChanged();
    partial void OnRFoutcurrentBufferChanging(System.Nullable<double> value);
    partial void OnRFoutcurrentBufferChanged();
    partial void OnRFoutdataSampleWidthChanging(System.Nullable<int> value);
    partial void OnRFoutdataSampleWidthChanged();
    partial void OnRFoutdataSourceChanging(string value);
    partial void OnRFoutdataSourceChanged();
    partial void OnRFoutdesiredBufferChanging(System.Nullable<double> value);
    partial void OnRFoutdesiredBufferChanged();
    partial void OnRFoutdesiredDelayChanging(System.Nullable<double> value);
    partial void OnRFoutdesiredDelayChanged();
    partial void OnRFoutdestinationPortChanging(System.Nullable<int> value);
    partial void OnRFoutdestinationPortChanged();
    partial void OnRFoutdroppedPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutdroppedPacketsChanged();
    partial void OnRFoutfrequencyOffsetChanging(System.Nullable<double> value);
    partial void OnRFoutfrequencyOffsetChanged();
    partial void OnRFoutgapCountChanging(System.Nullable<int> value);
    partial void OnRFoutgapCountChanged();
    partial void OnRFoutmeasuredDelayChanging(System.Nullable<double> value);
    partial void OnRFoutmeasuredDelayChanged();
    partial void OnRFoutmeasuredNetworkRateChanging(System.Nullable<double> value);
    partial void OnRFoutmeasuredNetworkRateChanged();
    partial void OnRFoutmeasuredPacketRateChanging(System.Nullable<double> value);
    partial void OnRFoutmeasuredPacketRateChanged();
    partial void OnRFoutnetStreamGainChanging(System.Nullable<double> value);
    partial void OnRFoutnetStreamGainChanged();
    partial void OnRFoutnetworkDelayChanging(System.Nullable<double> value);
    partial void OnRFoutnetworkDelayChanged();
    partial void OnRFoutpacketOverheadChanging(System.Nullable<double> value);
    partial void OnRFoutpacketOverheadChanged();
    partial void OnRFoutpfecDecoderStatusChanging(string value);
    partial void OnRFoutpfecDecoderStatusChanged();
    partial void OnRFoutpfecMissingSetsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecMissingSetsChanged();
    partial void OnRFoutpfecRepairedPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecRepairedPacketsChanged();
    partial void OnRFoutpfecTotalPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecTotalPacketsChanged();
    partial void OnRFoutpfecUnrepairablePacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecUnrepairablePacketsChanged();
    partial void OnRFoutpreserveLatencyChanging(System.Nullable<bool> value);
    partial void OnRFoutpreserveLatencyChanged();
    partial void OnRFoutpreserveLatencyLatePacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyLatePacketsChanged();
    partial void OnRFoutpreserveLatencyMaxBurstLossChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyMaxBurstLossChanged();
    partial void OnRFoutpreserveLatencyMissingPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyMissingPacketsChanged();
    partial void OnRFoutpreserveLatencyOutOfOrderPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyOutOfOrderPacketsChanged();
    partial void OnRFoutpreserveLatencyReleaseMarginChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyReleaseMarginChanged();
    partial void OnRFoutreleaseModeChanging(string value);
    partial void OnRFoutreleaseModeChanged();
    partial void OnRFoutsourceHostChanging(string value);
    partial void OnRFoutsourceHostChanged();
    partial void OnRFoutsourcePortChanging(System.Nullable<int> value);
    partial void OnRFoutsourcePortChanged();
    partial void OnRFoutstreamBandwidthChanging(System.Nullable<double> value);
    partial void OnRFoutstreamBandwidthChanged();
    partial void OnRFoutstreamEnableChanging(System.Nullable<bool> value);
    partial void OnRFoutstreamEnableChanged();
    partial void OnRFoutstreamIdChanging(System.Nullable<int> value);
    partial void OnRFoutstreamIdChanged();
    partial void OnRFoutstreamSampleRateChanging(System.Nullable<double> value);
    partial void OnRFoutstreamSampleRateChanged();
    partial void OnRFoutunderflowCountChanging(System.Nullable<int> value);
    partial void OnRFoutunderflowCountChanged();
    partial void OnRFoutupstreamIrigLockedChanging(System.Nullable<bool> value);
    partial void OnRFoutupstreamIrigLockedChanged();
    partial void OnRFoutupstreamOnePpsLockedChanging(System.Nullable<bool> value);
    partial void OnRFoutupstreamOnePpsLockedChanged();
    partial void OnRFoutupstreamPathGainChanging(System.Nullable<double> value);
    partial void OnRFoutupstreamPathGainChanged();
    partial void OnRFoutupstreamTenMhzLockedChanging(System.Nullable<bool> value);
    partial void OnRFoutupstreamTenMhzLockedChanged();
    partial void OnRFoutuseLocalReferenceChanging(System.Nullable<bool> value);
    partial void OnRFoutuseLocalReferenceChanged();
    #endregion
		
		public MetricSite1Summary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDateStamp", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ExtDateStamp
		{
			get
			{
				return this._ExtDateStamp;
			}
			set
			{
				if ((this._ExtDateStamp != value))
				{
					this.OnExtDateStampChanging(value);
					this.SendPropertyChanging();
					this._ExtDateStamp = value;
					this.SendPropertyChanged("ExtDateStamp");
					this.OnExtDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtSourceUnit", DbType="NVarChar(50)")]
		public string ExtSourceUnit
		{
			get
			{
				return this._ExtSourceUnit;
			}
			set
			{
				if ((this._ExtSourceUnit != value))
				{
					this.OnExtSourceUnitChanging(value);
					this.SendPropertyChanging();
					this._ExtSourceUnit = value;
					this.SendPropertyChanged("ExtSourceUnit");
					this.OnExtSourceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDestUnit", DbType="NVarChar(50)")]
		public string ExtDestUnit
		{
			get
			{
				return this._ExtDestUnit;
			}
			set
			{
				if ((this._ExtDestUnit != value))
				{
					this.OnExtDestUnitChanging(value);
					this.SendPropertyChanging();
					this._ExtDestUnit = value;
					this.SendPropertyChanged("ExtDestUnit");
					this.OnExtDestUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDirection", DbType="NVarChar(50)")]
		public string ExtDirection
		{
			get
			{
				return this._ExtDirection;
			}
			set
			{
				if ((this._ExtDirection != value))
				{
					this.OnExtDirectionChanging(value);
					this.SendPropertyChanging();
					this._ExtDirection = value;
					this.SendPropertyChanged("ExtDirection");
					this.OnExtDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDisplayOrder", DbType="Int")]
		public System.Nullable<int> ExtDisplayOrder
		{
			get
			{
				return this._ExtDisplayOrder;
			}
			set
			{
				if ((this._ExtDisplayOrder != value))
				{
					this.OnExtDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._ExtDisplayOrder = value;
					this.SendPropertyChanged("ExtDisplayOrder");
					this.OnExtDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtCommError", DbType="Bit")]
		public System.Nullable<bool> ExtCommError
		{
			get
			{
				return this._ExtCommError;
			}
			set
			{
				if ((this._ExtCommError != value))
				{
					this.OnExtCommErrorChanging(value);
					this.SendPropertyChanging();
					this._ExtCommError = value;
					this.SendPropertyChanged("ExtCommError");
					this.OnExtCommErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComActive", DbType="Bit")]
		public System.Nullable<bool> ComActive
		{
			get
			{
				return this._ComActive;
			}
			set
			{
				if ((this._ComActive != value))
				{
					this.OnComActiveChanging(value);
					this.SendPropertyChanging();
					this._ComActive = value;
					this.SendPropertyChanged("ComActive");
					this.OnComActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComAddress", DbType="NVarChar(50)")]
		public string ComAddress
		{
			get
			{
				return this._ComAddress;
			}
			set
			{
				if ((this._ComAddress != value))
				{
					this.OnComAddressChanging(value);
					this.SendPropertyChanging();
					this._ComAddress = value;
					this.SendPropertyChanged("ComAddress");
					this.OnComAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComCompositeStatus", DbType="NVarChar(50)")]
		public string ComCompositeStatus
		{
			get
			{
				return this._ComCompositeStatus;
			}
			set
			{
				if ((this._ComCompositeStatus != value))
				{
					this.OnComCompositeStatusChanging(value);
					this.SendPropertyChanging();
					this._ComCompositeStatus = value;
					this.SendPropertyChanged("ComCompositeStatus");
					this.OnComCompositeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComCompositeStatusMsg", DbType="NVarChar(512)")]
		public string ComCompositeStatusMsg
		{
			get
			{
				return this._ComCompositeStatusMsg;
			}
			set
			{
				if ((this._ComCompositeStatusMsg != value))
				{
					this.OnComCompositeStatusMsgChanging(value);
					this.SendPropertyChanging();
					this._ComCompositeStatusMsg = value;
					this.SendPropertyChanged("ComCompositeStatusMsg");
					this.OnComCompositeStatusMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComContextPacketState", DbType="NVarChar(100)")]
		public string ComContextPacketState
		{
			get
			{
				return this._ComContextPacketState;
			}
			set
			{
				if ((this._ComContextPacketState != value))
				{
					this.OnComContextPacketStateChanging(value);
					this.SendPropertyChanging();
					this._ComContextPacketState = value;
					this.SendPropertyChanged("ComContextPacketState");
					this.OnComContextPacketStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComcurrentGain", DbType="Float")]
		public System.Nullable<double> ComcurrentGain
		{
			get
			{
				return this._ComcurrentGain;
			}
			set
			{
				if ((this._ComcurrentGain != value))
				{
					this.OnComcurrentGainChanging(value);
					this.SendPropertyChanging();
					this._ComcurrentGain = value;
					this.SendPropertyChanged("ComcurrentGain");
					this.OnComcurrentGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComdiscardedPackets", DbType="Int")]
		public System.Nullable<int> ComdiscardedPackets
		{
			get
			{
				return this._ComdiscardedPackets;
			}
			set
			{
				if ((this._ComdiscardedPackets != value))
				{
					this.OnComdiscardedPacketsChanging(value);
					this.SendPropertyChanging();
					this._ComdiscardedPackets = value;
					this.SendPropertyChanged("ComdiscardedPackets");
					this.OnComdiscardedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComenableMulticastGroupSubscriptions", DbType="Bit")]
		public System.Nullable<bool> ComenableMulticastGroupSubscriptions
		{
			get
			{
				return this._ComenableMulticastGroupSubscriptions;
			}
			set
			{
				if ((this._ComenableMulticastGroupSubscriptions != value))
				{
					this.OnComenableMulticastGroupSubscriptionsChanging(value);
					this.SendPropertyChanging();
					this._ComenableMulticastGroupSubscriptions = value;
					this.SendPropertyChanged("ComenableMulticastGroupSubscriptions");
					this.OnComenableMulticastGroupSubscriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComfanSpeed", DbType="Int")]
		public System.Nullable<int> ComfanSpeed
		{
			get
			{
				return this._ComfanSpeed;
			}
			set
			{
				if ((this._ComfanSpeed != value))
				{
					this.OnComfanSpeedChanging(value);
					this.SendPropertyChanging();
					this._ComfanSpeed = value;
					this.SendPropertyChanged("ComfanSpeed");
					this.OnComfanSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComgainMode", DbType="NVarChar(50)")]
		public string ComgainMode
		{
			get
			{
				return this._ComgainMode;
			}
			set
			{
				if ((this._ComgainMode != value))
				{
					this.OnComgainModeChanging(value);
					this.SendPropertyChanging();
					this._ComgainMode = value;
					this.SendPropertyChanged("ComgainMode");
					this.OnComgainModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comgateway", DbType="NVarChar(50)")]
		public string Comgateway
		{
			get
			{
				return this._Comgateway;
			}
			set
			{
				if ((this._Comgateway != value))
				{
					this.OnComgatewayChanging(value);
					this.SendPropertyChanging();
					this._Comgateway = value;
					this.SendPropertyChanged("Comgateway");
					this.OnComgatewayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComhealthStatus", DbType="NVarChar(50)")]
		public string ComhealthStatus
		{
			get
			{
				return this._ComhealthStatus;
			}
			set
			{
				if ((this._ComhealthStatus != value))
				{
					this.OnComhealthStatusChanging(value);
					this.SendPropertyChanging();
					this._ComhealthStatus = value;
					this.SendPropertyChanged("ComhealthStatus");
					this.OnComhealthStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComhealthStatusMsg", DbType="NVarChar(512)")]
		public string ComhealthStatusMsg
		{
			get
			{
				return this._ComhealthStatusMsg;
			}
			set
			{
				if ((this._ComhealthStatusMsg != value))
				{
					this.OnComhealthStatusMsgChanging(value);
					this.SendPropertyChanging();
					this._ComhealthStatusMsg = value;
					this.SendPropertyChanged("ComhealthStatusMsg");
					this.OnComhealthStatusMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfAdcSaturation", DbType="Float")]
		public System.Nullable<double> CominputRfAdcSaturation
		{
			get
			{
				return this._CominputRfAdcSaturation;
			}
			set
			{
				if ((this._CominputRfAdcSaturation != value))
				{
					this.OnCominputRfAdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._CominputRfAdcSaturation = value;
					this.SendPropertyChanged("CominputRfAdcSaturation");
					this.OnCominputRfAdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfAdcSaturationPercent", DbType="Float")]
		public System.Nullable<double> CominputRfAdcSaturationPercent
		{
			get
			{
				return this._CominputRfAdcSaturationPercent;
			}
			set
			{
				if ((this._CominputRfAdcSaturationPercent != value))
				{
					this.OnCominputRfAdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._CominputRfAdcSaturationPercent = value;
					this.SendPropertyChanged("CominputRfAdcSaturationPercent");
					this.OnCominputRfAdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfBandwidth", DbType="NVarChar(50)")]
		public string CominputRfBandwidth
		{
			get
			{
				return this._CominputRfBandwidth;
			}
			set
			{
				if ((this._CominputRfBandwidth != value))
				{
					this.OnCominputRfBandwidthChanging(value);
					this.SendPropertyChanging();
					this._CominputRfBandwidth = value;
					this.SendPropertyChanged("CominputRfBandwidth");
					this.OnCominputRfBandwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfCenterFrequency", DbType="Float")]
		public System.Nullable<double> CominputRfCenterFrequency
		{
			get
			{
				return this._CominputRfCenterFrequency;
			}
			set
			{
				if ((this._CominputRfCenterFrequency != value))
				{
					this.OnCominputRfCenterFrequencyChanging(value);
					this.SendPropertyChanging();
					this._CominputRfCenterFrequency = value;
					this.SendPropertyChanged("CominputRfCenterFrequency");
					this.OnCominputRfCenterFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1AdcSaturation", DbType="Float")]
		public System.Nullable<double> CominputRfPort1AdcSaturation
		{
			get
			{
				return this._CominputRfPort1AdcSaturation;
			}
			set
			{
				if ((this._CominputRfPort1AdcSaturation != value))
				{
					this.OnCominputRfPort1AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1AdcSaturation = value;
					this.SendPropertyChanged("CominputRfPort1AdcSaturation");
					this.OnCominputRfPort1AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1AdcSaturationPercent", DbType="Float")]
		public System.Nullable<double> CominputRfPort1AdcSaturationPercent
		{
			get
			{
				return this._CominputRfPort1AdcSaturationPercent;
			}
			set
			{
				if ((this._CominputRfPort1AdcSaturationPercent != value))
				{
					this.OnCominputRfPort1AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1AdcSaturationPercent = value;
					this.SendPropertyChanged("CominputRfPort1AdcSaturationPercent");
					this.OnCominputRfPort1AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1MinimumGain", DbType="Float")]
		public System.Nullable<double> CominputRfPort1MinimumGain
		{
			get
			{
				return this._CominputRfPort1MinimumGain;
			}
			set
			{
				if ((this._CominputRfPort1MinimumGain != value))
				{
					this.OnCominputRfPort1MinimumGainChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1MinimumGain = value;
					this.SendPropertyChanged("CominputRfPort1MinimumGain");
					this.OnCominputRfPort1MinimumGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1Power", DbType="Float")]
		public System.Nullable<double> CominputRfPort1Power
		{
			get
			{
				return this._CominputRfPort1Power;
			}
			set
			{
				if ((this._CominputRfPort1Power != value))
				{
					this.OnCominputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1Power = value;
					this.SendPropertyChanged("CominputRfPort1Power");
					this.OnCominputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2AdcSaturation", DbType="Float")]
		public System.Nullable<double> CominputRfPort2AdcSaturation
		{
			get
			{
				return this._CominputRfPort2AdcSaturation;
			}
			set
			{
				if ((this._CominputRfPort2AdcSaturation != value))
				{
					this.OnCominputRfPort2AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2AdcSaturation = value;
					this.SendPropertyChanged("CominputRfPort2AdcSaturation");
					this.OnCominputRfPort2AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2AdcSaturationPercent", DbType="Float")]
		public System.Nullable<double> CominputRfPort2AdcSaturationPercent
		{
			get
			{
				return this._CominputRfPort2AdcSaturationPercent;
			}
			set
			{
				if ((this._CominputRfPort2AdcSaturationPercent != value))
				{
					this.OnCominputRfPort2AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2AdcSaturationPercent = value;
					this.SendPropertyChanged("CominputRfPort2AdcSaturationPercent");
					this.OnCominputRfPort2AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2MinimumGain", DbType="Float")]
		public System.Nullable<double> CominputRfPort2MinimumGain
		{
			get
			{
				return this._CominputRfPort2MinimumGain;
			}
			set
			{
				if ((this._CominputRfPort2MinimumGain != value))
				{
					this.OnCominputRfPort2MinimumGainChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2MinimumGain = value;
					this.SendPropertyChanged("CominputRfPort2MinimumGain");
					this.OnCominputRfPort2MinimumGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2Power", DbType="Float")]
		public System.Nullable<double> CominputRfPort2Power
		{
			get
			{
				return this._CominputRfPort2Power;
			}
			set
			{
				if ((this._CominputRfPort2Power != value))
				{
					this.OnCominputRfPort2PowerChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2Power = value;
					this.SendPropertyChanged("CominputRfPort2Power");
					this.OnCominputRfPort2PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPortSelect", DbType="NVarChar(50)")]
		public string CominputRfPortSelect
		{
			get
			{
				return this._CominputRfPortSelect;
			}
			set
			{
				if ((this._CominputRfPortSelect != value))
				{
					this.OnCominputRfPortSelectChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPortSelect = value;
					this.SendPropertyChanged("CominputRfPortSelect");
					this.OnCominputRfPortSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPower", DbType="Float")]
		public System.Nullable<double> CominputRfPower
		{
			get
			{
				return this._CominputRfPower;
			}
			set
			{
				if ((this._CominputRfPower != value))
				{
					this.OnCominputRfPowerChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPower = value;
					this.SendPropertyChanged("CominputRfPower");
					this.OnCominputRfPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfSampleRate", DbType="Float")]
		public System.Nullable<double> CominputRfSampleRate
		{
			get
			{
				return this._CominputRfSampleRate;
			}
			set
			{
				if ((this._CominputRfSampleRate != value))
				{
					this.OnCominputRfSampleRateChanging(value);
					this.SendPropertyChanging();
					this._CominputRfSampleRate = value;
					this.SendPropertyChanged("CominputRfSampleRate");
					this.OnCominputRfSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominvertRfOutputSpectrum", DbType="Bit")]
		public System.Nullable<bool> CominvertRfOutputSpectrum
		{
			get
			{
				return this._CominvertRfOutputSpectrum;
			}
			set
			{
				if ((this._CominvertRfOutputSpectrum != value))
				{
					this.OnCominvertRfOutputSpectrumChanging(value);
					this.SendPropertyChanging();
					this._CominvertRfOutputSpectrum = value;
					this.SendPropertyChanged("CominvertRfOutputSpectrum");
					this.OnCominvertRfOutputSpectrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComirigDcLocked", DbType="Bit")]
		public System.Nullable<bool> ComirigDcLocked
		{
			get
			{
				return this._ComirigDcLocked;
			}
			set
			{
				if ((this._ComirigDcLocked != value))
				{
					this.OnComirigDcLockedChanging(value);
					this.SendPropertyChanging();
					this._ComirigDcLocked = value;
					this.SendPropertyChanged("ComirigDcLocked");
					this.OnComirigDcLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComirigLocked", DbType="Bit")]
		public System.Nullable<bool> ComirigLocked
		{
			get
			{
				return this._ComirigLocked;
			}
			set
			{
				if ((this._ComirigLocked != value))
				{
					this.OnComirigLockedChanging(value);
					this.SendPropertyChanging();
					this._ComirigLocked = value;
					this.SendPropertyChanged("ComirigLocked");
					this.OnComirigLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comlabel", DbType="NVarChar(50)")]
		public string Comlabel
		{
			get
			{
				return this._Comlabel;
			}
			set
			{
				if ((this._Comlabel != value))
				{
					this.OnComlabelChanging(value);
					this.SendPropertyChanging();
					this._Comlabel = value;
					this.SendPropertyChanged("Comlabel");
					this.OnComlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComlogLevel", DbType="NVarChar(50)")]
		public string ComlogLevel
		{
			get
			{
				return this._ComlogLevel;
			}
			set
			{
				if ((this._ComlogLevel != value))
				{
					this.OnComlogLevelChanging(value);
					this.SendPropertyChanging();
					this._ComlogLevel = value;
					this.SendPropertyChanged("ComlogLevel");
					this.OnComlogLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanualGain", DbType="Float")]
		public System.Nullable<double> CommanualGain
		{
			get
			{
				return this._CommanualGain;
			}
			set
			{
				if ((this._CommanualGain != value))
				{
					this.OnCommanualGainChanging(value);
					this.SendPropertyChanging();
					this._CommanualGain = value;
					this.SendPropertyChanged("CommanualGain");
					this.OnCommanualGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComminimumGain", DbType="Float")]
		public System.Nullable<double> ComminimumGain
		{
			get
			{
				return this._ComminimumGain;
			}
			set
			{
				if ((this._ComminimumGain != value))
				{
					this.OnComminimumGainChanging(value);
					this.SendPropertyChanging();
					this._ComminimumGain = value;
					this.SendPropertyChanged("ComminimumGain");
					this.OnComminimumGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommoduleState", DbType="NVarChar(50)")]
		public string CommoduleState
		{
			get
			{
				return this._CommoduleState;
			}
			set
			{
				if ((this._CommoduleState != value))
				{
					this.OnCommoduleStateChanging(value);
					this.SendPropertyChanging();
					this._CommoduleState = value;
					this.SendPropertyChanged("CommoduleState");
					this.OnCommoduleStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommoduleType", DbType="NVarChar(50)")]
		public string CommoduleType
		{
			get
			{
				return this._CommoduleType;
			}
			set
			{
				if ((this._CommoduleType != value))
				{
					this.OnCommoduleTypeChanging(value);
					this.SendPropertyChanging();
					this._CommoduleType = value;
					this.SendPropertyChanged("CommoduleType");
					this.OnCommoduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComntpStatus", DbType="NVarChar(50)")]
		public string ComntpStatus
		{
			get
			{
				return this._ComntpStatus;
			}
			set
			{
				if ((this._ComntpStatus != value))
				{
					this.OnComntpStatusChanging(value);
					this.SendPropertyChanging();
					this._ComntpStatus = value;
					this.SendPropertyChanged("ComntpStatus");
					this.OnComntpStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComonePpsPresent", DbType="Bit")]
		public System.Nullable<bool> ComonePpsPresent
		{
			get
			{
				return this._ComonePpsPresent;
			}
			set
			{
				if ((this._ComonePpsPresent != value))
				{
					this.OnComonePpsPresentChanging(value);
					this.SendPropertyChanging();
					this._ComonePpsPresent = value;
					this.SendPropertyChanged("ComonePpsPresent");
					this.OnComonePpsPresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputAttenuation", DbType="Float")]
		public System.Nullable<double> ComoutputAttenuation
		{
			get
			{
				return this._ComoutputAttenuation;
			}
			set
			{
				if ((this._ComoutputAttenuation != value))
				{
					this.OnComoutputAttenuationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputAttenuation = value;
					this.SendPropertyChanged("ComoutputAttenuation");
					this.OnComoutputAttenuationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfCenterFrequency", DbType="Float")]
		public System.Nullable<double> ComoutputRfCenterFrequency
		{
			get
			{
				return this._ComoutputRfCenterFrequency;
			}
			set
			{
				if ((this._ComoutputRfCenterFrequency != value))
				{
					this.OnComoutputRfCenterFrequencyChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfCenterFrequency = value;
					this.SendPropertyChanged("ComoutputRfCenterFrequency");
					this.OnComoutputRfCenterFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfDacSaturation", DbType="Float")]
		public System.Nullable<double> ComoutputRfDacSaturation
		{
			get
			{
				return this._ComoutputRfDacSaturation;
			}
			set
			{
				if ((this._ComoutputRfDacSaturation != value))
				{
					this.OnComoutputRfDacSaturationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfDacSaturation = value;
					this.SendPropertyChanged("ComoutputRfDacSaturation");
					this.OnComoutputRfDacSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfDacSaturationPercent", DbType="Float")]
		public System.Nullable<double> ComoutputRfDacSaturationPercent
		{
			get
			{
				return this._ComoutputRfDacSaturationPercent;
			}
			set
			{
				if ((this._ComoutputRfDacSaturationPercent != value))
				{
					this.OnComoutputRfDacSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfDacSaturationPercent = value;
					this.SendPropertyChanged("ComoutputRfDacSaturationPercent");
					this.OnComoutputRfDacSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort1DacSaturation", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort1DacSaturation
		{
			get
			{
				return this._ComoutputRfPort1DacSaturation;
			}
			set
			{
				if ((this._ComoutputRfPort1DacSaturation != value))
				{
					this.OnComoutputRfPort1DacSaturationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort1DacSaturation = value;
					this.SendPropertyChanged("ComoutputRfPort1DacSaturation");
					this.OnComoutputRfPort1DacSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort1DacSaturationPercent", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort1DacSaturationPercent
		{
			get
			{
				return this._ComoutputRfPort1DacSaturationPercent;
			}
			set
			{
				if ((this._ComoutputRfPort1DacSaturationPercent != value))
				{
					this.OnComoutputRfPort1DacSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort1DacSaturationPercent = value;
					this.SendPropertyChanged("ComoutputRfPort1DacSaturationPercent");
					this.OnComoutputRfPort1DacSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort1Power", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort1Power
		{
			get
			{
				return this._ComoutputRfPort1Power;
			}
			set
			{
				if ((this._ComoutputRfPort1Power != value))
				{
					this.OnComoutputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort1Power = value;
					this.SendPropertyChanged("ComoutputRfPort1Power");
					this.OnComoutputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort2DacSaturation", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort2DacSaturation
		{
			get
			{
				return this._ComoutputRfPort2DacSaturation;
			}
			set
			{
				if ((this._ComoutputRfPort2DacSaturation != value))
				{
					this.OnComoutputRfPort2DacSaturationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort2DacSaturation = value;
					this.SendPropertyChanged("ComoutputRfPort2DacSaturation");
					this.OnComoutputRfPort2DacSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort2DacSaturationPercent", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort2DacSaturationPercent
		{
			get
			{
				return this._ComoutputRfPort2DacSaturationPercent;
			}
			set
			{
				if ((this._ComoutputRfPort2DacSaturationPercent != value))
				{
					this.OnComoutputRfPort2DacSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort2DacSaturationPercent = value;
					this.SendPropertyChanged("ComoutputRfPort2DacSaturationPercent");
					this.OnComoutputRfPort2DacSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort2Power", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort2Power
		{
			get
			{
				return this._ComoutputRfPort2Power;
			}
			set
			{
				if ((this._ComoutputRfPort2Power != value))
				{
					this.OnComoutputRfPort2PowerChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort2Power = value;
					this.SendPropertyChanged("ComoutputRfPort2Power");
					this.OnComoutputRfPort2PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPortSelect", DbType="NVarChar(50)")]
		public string ComoutputRfPortSelect
		{
			get
			{
				return this._ComoutputRfPortSelect;
			}
			set
			{
				if ((this._ComoutputRfPortSelect != value))
				{
					this.OnComoutputRfPortSelectChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPortSelect = value;
					this.SendPropertyChanged("ComoutputRfPortSelect");
					this.OnComoutputRfPortSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPower", DbType="Float")]
		public System.Nullable<double> ComoutputRfPower
		{
			get
			{
				return this._ComoutputRfPower;
			}
			set
			{
				if ((this._ComoutputRfPower != value))
				{
					this.OnComoutputRfPowerChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPower = value;
					this.SendPropertyChanged("ComoutputRfPower");
					this.OnComoutputRfPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoverrideOutputFrequency", DbType="Float")]
		public System.Nullable<double> ComoverrideOutputFrequency
		{
			get
			{
				return this._ComoverrideOutputFrequency;
			}
			set
			{
				if ((this._ComoverrideOutputFrequency != value))
				{
					this.OnComoverrideOutputFrequencyChanging(value);
					this.SendPropertyChanging();
					this._ComoverrideOutputFrequency = value;
					this.SendPropertyChanged("ComoverrideOutputFrequency");
					this.OnComoverrideOutputFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoverrideOutputFrequencyEnable", DbType="Bit")]
		public System.Nullable<bool> ComoverrideOutputFrequencyEnable
		{
			get
			{
				return this._ComoverrideOutputFrequencyEnable;
			}
			set
			{
				if ((this._ComoverrideOutputFrequencyEnable != value))
				{
					this.OnComoverrideOutputFrequencyEnableChanging(value);
					this.SendPropertyChanging();
					this._ComoverrideOutputFrequencyEnable = value;
					this.SendPropertyChanged("ComoverrideOutputFrequencyEnable");
					this.OnComoverrideOutputFrequencyEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompollInterval", DbType="Int")]
		public System.Nullable<int> CompollInterval
		{
			get
			{
				return this._CompollInterval;
			}
			set
			{
				if ((this._CompollInterval != value))
				{
					this.OnCompollIntervalChanging(value);
					this.SendPropertyChanging();
					this._CompollInterval = value;
					this.SendPropertyChanged("CompollInterval");
					this.OnCompollIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComposixNanoseconds", DbType="Int")]
		public System.Nullable<int> ComposixNanoseconds
		{
			get
			{
				return this._ComposixNanoseconds;
			}
			set
			{
				if ((this._ComposixNanoseconds != value))
				{
					this.OnComposixNanosecondsChanging(value);
					this.SendPropertyChanging();
					this._ComposixNanoseconds = value;
					this.SendPropertyChanged("ComposixNanoseconds");
					this.OnComposixNanosecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComposixSeconds", DbType="Int")]
		public System.Nullable<int> ComposixSeconds
		{
			get
			{
				return this._ComposixSeconds;
			}
			set
			{
				if ((this._ComposixSeconds != value))
				{
					this.OnComposixSecondsChanging(value);
					this.SendPropertyChanging();
					this._ComposixSeconds = value;
					this.SendPropertyChanged("ComposixSeconds");
					this.OnComposixSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComrebootRequired", DbType="Bit")]
		public System.Nullable<bool> ComrebootRequired
		{
			get
			{
				return this._ComrebootRequired;
			}
			set
			{
				if ((this._ComrebootRequired != value))
				{
					this.OnComrebootRequiredChanging(value);
					this.SendPropertyChanging();
					this._ComrebootRequired = value;
					this.SendPropertyChanged("ComrebootRequired");
					this.OnComrebootRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComReplyWaitTime", DbType="NVarChar(50)")]
		public string ComReplyWaitTime
		{
			get
			{
				return this._ComReplyWaitTime;
			}
			set
			{
				if ((this._ComReplyWaitTime != value))
				{
					this.OnComReplyWaitTimeChanging(value);
					this.SendPropertyChanging();
					this._ComReplyWaitTime = value;
					this.SendPropertyChanged("ComReplyWaitTime");
					this.OnComReplyWaitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRequiredReadPrivilege", DbType="NVarChar(50)")]
		public string ComRequiredReadPrivilege
		{
			get
			{
				return this._ComRequiredReadPrivilege;
			}
			set
			{
				if ((this._ComRequiredReadPrivilege != value))
				{
					this.OnComRequiredReadPrivilegeChanging(value);
					this.SendPropertyChanging();
					this._ComRequiredReadPrivilege = value;
					this.SendPropertyChanged("ComRequiredReadPrivilege");
					this.OnComRequiredReadPrivilegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRequiredWritePrivilege", DbType="NVarChar(50)")]
		public string ComRequiredWritePrivilege
		{
			get
			{
				return this._ComRequiredWritePrivilege;
			}
			set
			{
				if ((this._ComRequiredWritePrivilege != value))
				{
					this.OnComRequiredWritePrivilegeChanging(value);
					this.SendPropertyChanging();
					this._ComRequiredWritePrivilege = value;
					this.SendPropertyChanged("ComRequiredWritePrivilege");
					this.OnComRequiredWritePrivilegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRfOutputEnable", DbType="Bit")]
		public System.Nullable<bool> ComRfOutputEnable
		{
			get
			{
				return this._ComRfOutputEnable;
			}
			set
			{
				if ((this._ComRfOutputEnable != value))
				{
					this.OnComRfOutputEnableChanging(value);
					this.SendPropertyChanging();
					this._ComRfOutputEnable = value;
					this.SendPropertyChanged("ComRfOutputEnable");
					this.OnComRfOutputEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRfOutputSource", DbType="NVarChar(50)")]
		public string ComRfOutputSource
		{
			get
			{
				return this._ComRfOutputSource;
			}
			set
			{
				if ((this._ComRfOutputSource != value))
				{
					this.OnComRfOutputSourceChanging(value);
					this.SendPropertyChanging();
					this._ComRfOutputSource = value;
					this.SendPropertyChanged("ComRfOutputSource");
					this.OnComRfOutputSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSecuritySource", DbType="NVarChar(50)")]
		public string ComSecuritySource
		{
			get
			{
				return this._ComSecuritySource;
			}
			set
			{
				if ((this._ComSecuritySource != value))
				{
					this.OnComSecuritySourceChanging(value);
					this.SendPropertyChanging();
					this._ComSecuritySource = value;
					this.SendPropertyChanged("ComSecuritySource");
					this.OnComSecuritySourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSerialNumber", DbType="NVarChar(50)")]
		public string ComSerialNumber
		{
			get
			{
				return this._ComSerialNumber;
			}
			set
			{
				if ((this._ComSerialNumber != value))
				{
					this.OnComSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._ComSerialNumber = value;
					this.SendPropertyChanged("ComSerialNumber");
					this.OnComSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComShortDescription", DbType="NVarChar(250)")]
		public string ComShortDescription
		{
			get
			{
				return this._ComShortDescription;
			}
			set
			{
				if ((this._ComShortDescription != value))
				{
					this.OnComShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ComShortDescription = value;
					this.SendPropertyChanged("ComShortDescription");
					this.OnComShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSimulate", DbType="Bit")]
		public System.Nullable<bool> ComSimulate
		{
			get
			{
				return this._ComSimulate;
			}
			set
			{
				if ((this._ComSimulate != value))
				{
					this.OnComSimulateChanging(value);
					this.SendPropertyChanging();
					this._ComSimulate = value;
					this.SendPropertyChanged("ComSimulate");
					this.OnComSimulateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSquelchEnabled", DbType="Bit")]
		public System.Nullable<bool> ComSquelchEnabled
		{
			get
			{
				return this._ComSquelchEnabled;
			}
			set
			{
				if ((this._ComSquelchEnabled != value))
				{
					this.OnComSquelchEnabledChanging(value);
					this.SendPropertyChanging();
					this._ComSquelchEnabled = value;
					this.SendPropertyChanged("ComSquelchEnabled");
					this.OnComSquelchEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSystemTemperature", DbType="Int")]
		public System.Nullable<int> ComSystemTemperature
		{
			get
			{
				return this._ComSystemTemperature;
			}
			set
			{
				if ((this._ComSystemTemperature != value))
				{
					this.OnComSystemTemperatureChanging(value);
					this.SendPropertyChanging();
					this._ComSystemTemperature = value;
					this.SendPropertyChanged("ComSystemTemperature");
					this.OnComSystemTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSystemTimeSource", DbType="NVarChar(50)")]
		public string ComSystemTimeSource
		{
			get
			{
				return this._ComSystemTimeSource;
			}
			set
			{
				if ((this._ComSystemTimeSource != value))
				{
					this.OnComSystemTimeSourceChanging(value);
					this.SendPropertyChanging();
					this._ComSystemTimeSource = value;
					this.SendPropertyChanged("ComSystemTimeSource");
					this.OnComSystemTimeSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComTenMhzLocked", DbType="Bit")]
		public System.Nullable<bool> ComTenMhzLocked
		{
			get
			{
				return this._ComTenMhzLocked;
			}
			set
			{
				if ((this._ComTenMhzLocked != value))
				{
					this.OnComTenMhzLockedChanging(value);
					this.SendPropertyChanging();
					this._ComTenMhzLocked = value;
					this.SendPropertyChanged("ComTenMhzLocked");
					this.OnComTenMhzLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComVersion", DbType="NVarChar(50)")]
		public string ComVersion
		{
			get
			{
				return this._ComVersion;
			}
			set
			{
				if ((this._ComVersion != value))
				{
					this.OnComVersionChanging(value);
					this.SendPropertyChanging();
					this._ComVersion = value;
					this.SendPropertyChanged("ComVersion");
					this.OnComVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinname", DbType="NVarChar(50)")]
		public string RFinname
		{
			get
			{
				return this._RFinname;
			}
			set
			{
				if ((this._RFinname != value))
				{
					this.OnRFinnameChanging(value);
					this.SendPropertyChanging();
					this._RFinname = value;
					this.SendPropertyChanged("RFinname");
					this.OnRFinnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinbitRate", DbType="Float")]
		public System.Nullable<double> RFinbitRate
		{
			get
			{
				return this._RFinbitRate;
			}
			set
			{
				if ((this._RFinbitRate != value))
				{
					this.OnRFinbitRateChanging(value);
					this.SendPropertyChanging();
					this._RFinbitRate = value;
					this.SendPropertyChanged("RFinbitRate");
					this.OnRFinbitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFindataSampleWidth", DbType="Int")]
		public System.Nullable<int> RFindataSampleWidth
		{
			get
			{
				return this._RFindataSampleWidth;
			}
			set
			{
				if ((this._RFindataSampleWidth != value))
				{
					this.OnRFindataSampleWidthChanging(value);
					this.SendPropertyChanging();
					this._RFindataSampleWidth = value;
					this.SendPropertyChanged("RFindataSampleWidth");
					this.OnRFindataSampleWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFindestinationHost", DbType="NVarChar(50)")]
		public string RFindestinationHost
		{
			get
			{
				return this._RFindestinationHost;
			}
			set
			{
				if ((this._RFindestinationHost != value))
				{
					this.OnRFindestinationHostChanging(value);
					this.SendPropertyChanging();
					this._RFindestinationHost = value;
					this.SendPropertyChanged("RFindestinationHost");
					this.OnRFindestinationHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFindestinationPort", DbType="Int")]
		public System.Nullable<int> RFindestinationPort
		{
			get
			{
				return this._RFindestinationPort;
			}
			set
			{
				if ((this._RFindestinationPort != value))
				{
					this.OnRFindestinationPortChanging(value);
					this.SendPropertyChanging();
					this._RFindestinationPort = value;
					this.SendPropertyChanged("RFindestinationPort");
					this.OnRFindestinationPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinfrequencyOffset", DbType="Float")]
		public System.Nullable<double> RFinfrequencyOffset
		{
			get
			{
				return this._RFinfrequencyOffset;
			}
			set
			{
				if ((this._RFinfrequencyOffset != value))
				{
					this.OnRFinfrequencyOffsetChanging(value);
					this.SendPropertyChanging();
					this._RFinfrequencyOffset = value;
					this.SendPropertyChanged("RFinfrequencyOffset");
					this.OnRFinfrequencyOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinmaximumPacketSize", DbType="Float")]
		public System.Nullable<double> RFinmaximumPacketSize
		{
			get
			{
				return this._RFinmaximumPacketSize;
			}
			set
			{
				if ((this._RFinmaximumPacketSize != value))
				{
					this.OnRFinmaximumPacketSizeChanging(value);
					this.SendPropertyChanging();
					this._RFinmaximumPacketSize = value;
					this.SendPropertyChanged("RFinmaximumPacketSize");
					this.OnRFinmaximumPacketSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinmeasuredNetworkRate", DbType="Float")]
		public System.Nullable<double> RFinmeasuredNetworkRate
		{
			get
			{
				return this._RFinmeasuredNetworkRate;
			}
			set
			{
				if ((this._RFinmeasuredNetworkRate != value))
				{
					this.OnRFinmeasuredNetworkRateChanging(value);
					this.SendPropertyChanging();
					this._RFinmeasuredNetworkRate = value;
					this.SendPropertyChanged("RFinmeasuredNetworkRate");
					this.OnRFinmeasuredNetworkRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinmeasuredPacketRate", DbType="Float")]
		public System.Nullable<double> RFinmeasuredPacketRate
		{
			get
			{
				return this._RFinmeasuredPacketRate;
			}
			set
			{
				if ((this._RFinmeasuredPacketRate != value))
				{
					this.OnRFinmeasuredPacketRateChanging(value);
					this.SendPropertyChanging();
					this._RFinmeasuredPacketRate = value;
					this.SendPropertyChanged("RFinmeasuredPacketRate");
					this.OnRFinmeasuredPacketRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinminimumProcessingDelay", DbType="Float")]
		public System.Nullable<double> RFinminimumProcessingDelay
		{
			get
			{
				return this._RFinminimumProcessingDelay;
			}
			set
			{
				if ((this._RFinminimumProcessingDelay != value))
				{
					this.OnRFinminimumProcessingDelayChanging(value);
					this.SendPropertyChanging();
					this._RFinminimumProcessingDelay = value;
					this.SendPropertyChanged("RFinminimumProcessingDelay");
					this.OnRFinminimumProcessingDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinpacketOverhead", DbType="Float")]
		public System.Nullable<double> RFinpacketOverhead
		{
			get
			{
				return this._RFinpacketOverhead;
			}
			set
			{
				if ((this._RFinpacketOverhead != value))
				{
					this.OnRFinpacketOverheadChanging(value);
					this.SendPropertyChanging();
					this._RFinpacketOverhead = value;
					this.SendPropertyChanged("RFinpacketOverhead");
					this.OnRFinpacketOverheadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinpfecEnable", DbType="Bit")]
		public System.Nullable<bool> RFinpfecEnable
		{
			get
			{
				return this._RFinpfecEnable;
			}
			set
			{
				if ((this._RFinpfecEnable != value))
				{
					this.OnRFinpfecEnableChanging(value);
					this.SendPropertyChanging();
					this._RFinpfecEnable = value;
					this.SendPropertyChanged("RFinpfecEnable");
					this.OnRFinpfecEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinrouteSearch", DbType="NVarChar(50)")]
		public string RFinrouteSearch
		{
			get
			{
				return this._RFinrouteSearch;
			}
			set
			{
				if ((this._RFinrouteSearch != value))
				{
					this.OnRFinrouteSearchChanging(value);
					this.SendPropertyChanging();
					this._RFinrouteSearch = value;
					this.SendPropertyChanged("RFinrouteSearch");
					this.OnRFinrouteSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinsourcePort", DbType="Int")]
		public System.Nullable<int> RFinsourcePort
		{
			get
			{
				return this._RFinsourcePort;
			}
			set
			{
				if ((this._RFinsourcePort != value))
				{
					this.OnRFinsourcePortChanging(value);
					this.SendPropertyChanging();
					this._RFinsourcePort = value;
					this.SendPropertyChanged("RFinsourcePort");
					this.OnRFinsourcePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamBandwidth", DbType="Float")]
		public System.Nullable<double> RFinstreamBandwidth
		{
			get
			{
				return this._RFinstreamBandwidth;
			}
			set
			{
				if ((this._RFinstreamBandwidth != value))
				{
					this.OnRFinstreamBandwidthChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamBandwidth = value;
					this.SendPropertyChanged("RFinstreamBandwidth");
					this.OnRFinstreamBandwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamEnable", DbType="Bit")]
		public System.Nullable<bool> RFinstreamEnable
		{
			get
			{
				return this._RFinstreamEnable;
			}
			set
			{
				if ((this._RFinstreamEnable != value))
				{
					this.OnRFinstreamEnableChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamEnable = value;
					this.SendPropertyChanged("RFinstreamEnable");
					this.OnRFinstreamEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamGain", DbType="Float")]
		public System.Nullable<double> RFinstreamGain
		{
			get
			{
				return this._RFinstreamGain;
			}
			set
			{
				if ((this._RFinstreamGain != value))
				{
					this.OnRFinstreamGainChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamGain = value;
					this.SendPropertyChanged("RFinstreamGain");
					this.OnRFinstreamGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamId", DbType="Int")]
		public System.Nullable<int> RFinstreamId
		{
			get
			{
				return this._RFinstreamId;
			}
			set
			{
				if ((this._RFinstreamId != value))
				{
					this.OnRFinstreamIdChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamId = value;
					this.SendPropertyChanged("RFinstreamId");
					this.OnRFinstreamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamSampleRate", DbType="Float")]
		public System.Nullable<double> RFinstreamSampleRate
		{
			get
			{
				return this._RFinstreamSampleRate;
			}
			set
			{
				if ((this._RFinstreamSampleRate != value))
				{
					this.OnRFinstreamSampleRateChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamSampleRate = value;
					this.SendPropertyChanged("RFinstreamSampleRate");
					this.OnRFinstreamSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutname", DbType="NVarChar(50)")]
		public string RFoutname
		{
			get
			{
				return this._RFoutname;
			}
			set
			{
				if ((this._RFoutname != value))
				{
					this.OnRFoutnameChanging(value);
					this.SendPropertyChanging();
					this._RFoutname = value;
					this.SendPropertyChanged("RFoutname");
					this.OnRFoutnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutcurrentBuffer", DbType="Float")]
		public System.Nullable<double> RFoutcurrentBuffer
		{
			get
			{
				return this._RFoutcurrentBuffer;
			}
			set
			{
				if ((this._RFoutcurrentBuffer != value))
				{
					this.OnRFoutcurrentBufferChanging(value);
					this.SendPropertyChanging();
					this._RFoutcurrentBuffer = value;
					this.SendPropertyChanged("RFoutcurrentBuffer");
					this.OnRFoutcurrentBufferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdataSampleWidth", DbType="Int")]
		public System.Nullable<int> RFoutdataSampleWidth
		{
			get
			{
				return this._RFoutdataSampleWidth;
			}
			set
			{
				if ((this._RFoutdataSampleWidth != value))
				{
					this.OnRFoutdataSampleWidthChanging(value);
					this.SendPropertyChanging();
					this._RFoutdataSampleWidth = value;
					this.SendPropertyChanged("RFoutdataSampleWidth");
					this.OnRFoutdataSampleWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdataSource", DbType="NVarChar(50)")]
		public string RFoutdataSource
		{
			get
			{
				return this._RFoutdataSource;
			}
			set
			{
				if ((this._RFoutdataSource != value))
				{
					this.OnRFoutdataSourceChanging(value);
					this.SendPropertyChanging();
					this._RFoutdataSource = value;
					this.SendPropertyChanged("RFoutdataSource");
					this.OnRFoutdataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdesiredBuffer", DbType="Float")]
		public System.Nullable<double> RFoutdesiredBuffer
		{
			get
			{
				return this._RFoutdesiredBuffer;
			}
			set
			{
				if ((this._RFoutdesiredBuffer != value))
				{
					this.OnRFoutdesiredBufferChanging(value);
					this.SendPropertyChanging();
					this._RFoutdesiredBuffer = value;
					this.SendPropertyChanged("RFoutdesiredBuffer");
					this.OnRFoutdesiredBufferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdesiredDelay", DbType="Float")]
		public System.Nullable<double> RFoutdesiredDelay
		{
			get
			{
				return this._RFoutdesiredDelay;
			}
			set
			{
				if ((this._RFoutdesiredDelay != value))
				{
					this.OnRFoutdesiredDelayChanging(value);
					this.SendPropertyChanging();
					this._RFoutdesiredDelay = value;
					this.SendPropertyChanged("RFoutdesiredDelay");
					this.OnRFoutdesiredDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdestinationPort", DbType="Int")]
		public System.Nullable<int> RFoutdestinationPort
		{
			get
			{
				return this._RFoutdestinationPort;
			}
			set
			{
				if ((this._RFoutdestinationPort != value))
				{
					this.OnRFoutdestinationPortChanging(value);
					this.SendPropertyChanging();
					this._RFoutdestinationPort = value;
					this.SendPropertyChanged("RFoutdestinationPort");
					this.OnRFoutdestinationPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdroppedPackets", DbType="Int")]
		public System.Nullable<int> RFoutdroppedPackets
		{
			get
			{
				return this._RFoutdroppedPackets;
			}
			set
			{
				if ((this._RFoutdroppedPackets != value))
				{
					this.OnRFoutdroppedPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutdroppedPackets = value;
					this.SendPropertyChanged("RFoutdroppedPackets");
					this.OnRFoutdroppedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutfrequencyOffset", DbType="Float")]
		public System.Nullable<double> RFoutfrequencyOffset
		{
			get
			{
				return this._RFoutfrequencyOffset;
			}
			set
			{
				if ((this._RFoutfrequencyOffset != value))
				{
					this.OnRFoutfrequencyOffsetChanging(value);
					this.SendPropertyChanging();
					this._RFoutfrequencyOffset = value;
					this.SendPropertyChanged("RFoutfrequencyOffset");
					this.OnRFoutfrequencyOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutgapCount", DbType="Int")]
		public System.Nullable<int> RFoutgapCount
		{
			get
			{
				return this._RFoutgapCount;
			}
			set
			{
				if ((this._RFoutgapCount != value))
				{
					this.OnRFoutgapCountChanging(value);
					this.SendPropertyChanging();
					this._RFoutgapCount = value;
					this.SendPropertyChanged("RFoutgapCount");
					this.OnRFoutgapCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutmeasuredDelay", DbType="Float")]
		public System.Nullable<double> RFoutmeasuredDelay
		{
			get
			{
				return this._RFoutmeasuredDelay;
			}
			set
			{
				if ((this._RFoutmeasuredDelay != value))
				{
					this.OnRFoutmeasuredDelayChanging(value);
					this.SendPropertyChanging();
					this._RFoutmeasuredDelay = value;
					this.SendPropertyChanged("RFoutmeasuredDelay");
					this.OnRFoutmeasuredDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutmeasuredNetworkRate", DbType="Float")]
		public System.Nullable<double> RFoutmeasuredNetworkRate
		{
			get
			{
				return this._RFoutmeasuredNetworkRate;
			}
			set
			{
				if ((this._RFoutmeasuredNetworkRate != value))
				{
					this.OnRFoutmeasuredNetworkRateChanging(value);
					this.SendPropertyChanging();
					this._RFoutmeasuredNetworkRate = value;
					this.SendPropertyChanged("RFoutmeasuredNetworkRate");
					this.OnRFoutmeasuredNetworkRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutmeasuredPacketRate", DbType="Float")]
		public System.Nullable<double> RFoutmeasuredPacketRate
		{
			get
			{
				return this._RFoutmeasuredPacketRate;
			}
			set
			{
				if ((this._RFoutmeasuredPacketRate != value))
				{
					this.OnRFoutmeasuredPacketRateChanging(value);
					this.SendPropertyChanging();
					this._RFoutmeasuredPacketRate = value;
					this.SendPropertyChanged("RFoutmeasuredPacketRate");
					this.OnRFoutmeasuredPacketRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutnetStreamGain", DbType="Float")]
		public System.Nullable<double> RFoutnetStreamGain
		{
			get
			{
				return this._RFoutnetStreamGain;
			}
			set
			{
				if ((this._RFoutnetStreamGain != value))
				{
					this.OnRFoutnetStreamGainChanging(value);
					this.SendPropertyChanging();
					this._RFoutnetStreamGain = value;
					this.SendPropertyChanged("RFoutnetStreamGain");
					this.OnRFoutnetStreamGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutnetworkDelay", DbType="Float")]
		public System.Nullable<double> RFoutnetworkDelay
		{
			get
			{
				return this._RFoutnetworkDelay;
			}
			set
			{
				if ((this._RFoutnetworkDelay != value))
				{
					this.OnRFoutnetworkDelayChanging(value);
					this.SendPropertyChanging();
					this._RFoutnetworkDelay = value;
					this.SendPropertyChanged("RFoutnetworkDelay");
					this.OnRFoutnetworkDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpacketOverhead", DbType="Float")]
		public System.Nullable<double> RFoutpacketOverhead
		{
			get
			{
				return this._RFoutpacketOverhead;
			}
			set
			{
				if ((this._RFoutpacketOverhead != value))
				{
					this.OnRFoutpacketOverheadChanging(value);
					this.SendPropertyChanging();
					this._RFoutpacketOverhead = value;
					this.SendPropertyChanged("RFoutpacketOverhead");
					this.OnRFoutpacketOverheadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecDecoderStatus", DbType="NVarChar(50)")]
		public string RFoutpfecDecoderStatus
		{
			get
			{
				return this._RFoutpfecDecoderStatus;
			}
			set
			{
				if ((this._RFoutpfecDecoderStatus != value))
				{
					this.OnRFoutpfecDecoderStatusChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecDecoderStatus = value;
					this.SendPropertyChanged("RFoutpfecDecoderStatus");
					this.OnRFoutpfecDecoderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecMissingSets", DbType="Int")]
		public System.Nullable<int> RFoutpfecMissingSets
		{
			get
			{
				return this._RFoutpfecMissingSets;
			}
			set
			{
				if ((this._RFoutpfecMissingSets != value))
				{
					this.OnRFoutpfecMissingSetsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecMissingSets = value;
					this.SendPropertyChanged("RFoutpfecMissingSets");
					this.OnRFoutpfecMissingSetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecRepairedPackets", DbType="Int")]
		public System.Nullable<int> RFoutpfecRepairedPackets
		{
			get
			{
				return this._RFoutpfecRepairedPackets;
			}
			set
			{
				if ((this._RFoutpfecRepairedPackets != value))
				{
					this.OnRFoutpfecRepairedPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecRepairedPackets = value;
					this.SendPropertyChanged("RFoutpfecRepairedPackets");
					this.OnRFoutpfecRepairedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecTotalPackets", DbType="Int")]
		public System.Nullable<int> RFoutpfecTotalPackets
		{
			get
			{
				return this._RFoutpfecTotalPackets;
			}
			set
			{
				if ((this._RFoutpfecTotalPackets != value))
				{
					this.OnRFoutpfecTotalPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecTotalPackets = value;
					this.SendPropertyChanged("RFoutpfecTotalPackets");
					this.OnRFoutpfecTotalPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecUnrepairablePackets", DbType="Int")]
		public System.Nullable<int> RFoutpfecUnrepairablePackets
		{
			get
			{
				return this._RFoutpfecUnrepairablePackets;
			}
			set
			{
				if ((this._RFoutpfecUnrepairablePackets != value))
				{
					this.OnRFoutpfecUnrepairablePacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecUnrepairablePackets = value;
					this.SendPropertyChanged("RFoutpfecUnrepairablePackets");
					this.OnRFoutpfecUnrepairablePacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatency", DbType="Bit")]
		public System.Nullable<bool> RFoutpreserveLatency
		{
			get
			{
				return this._RFoutpreserveLatency;
			}
			set
			{
				if ((this._RFoutpreserveLatency != value))
				{
					this.OnRFoutpreserveLatencyChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatency = value;
					this.SendPropertyChanged("RFoutpreserveLatency");
					this.OnRFoutpreserveLatencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyLatePackets", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyLatePackets
		{
			get
			{
				return this._RFoutpreserveLatencyLatePackets;
			}
			set
			{
				if ((this._RFoutpreserveLatencyLatePackets != value))
				{
					this.OnRFoutpreserveLatencyLatePacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyLatePackets = value;
					this.SendPropertyChanged("RFoutpreserveLatencyLatePackets");
					this.OnRFoutpreserveLatencyLatePacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyMaxBurstLoss", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyMaxBurstLoss
		{
			get
			{
				return this._RFoutpreserveLatencyMaxBurstLoss;
			}
			set
			{
				if ((this._RFoutpreserveLatencyMaxBurstLoss != value))
				{
					this.OnRFoutpreserveLatencyMaxBurstLossChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyMaxBurstLoss = value;
					this.SendPropertyChanged("RFoutpreserveLatencyMaxBurstLoss");
					this.OnRFoutpreserveLatencyMaxBurstLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyMissingPackets", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyMissingPackets
		{
			get
			{
				return this._RFoutpreserveLatencyMissingPackets;
			}
			set
			{
				if ((this._RFoutpreserveLatencyMissingPackets != value))
				{
					this.OnRFoutpreserveLatencyMissingPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyMissingPackets = value;
					this.SendPropertyChanged("RFoutpreserveLatencyMissingPackets");
					this.OnRFoutpreserveLatencyMissingPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyOutOfOrderPackets", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyOutOfOrderPackets
		{
			get
			{
				return this._RFoutpreserveLatencyOutOfOrderPackets;
			}
			set
			{
				if ((this._RFoutpreserveLatencyOutOfOrderPackets != value))
				{
					this.OnRFoutpreserveLatencyOutOfOrderPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyOutOfOrderPackets = value;
					this.SendPropertyChanged("RFoutpreserveLatencyOutOfOrderPackets");
					this.OnRFoutpreserveLatencyOutOfOrderPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyReleaseMargin", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyReleaseMargin
		{
			get
			{
				return this._RFoutpreserveLatencyReleaseMargin;
			}
			set
			{
				if ((this._RFoutpreserveLatencyReleaseMargin != value))
				{
					this.OnRFoutpreserveLatencyReleaseMarginChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyReleaseMargin = value;
					this.SendPropertyChanged("RFoutpreserveLatencyReleaseMargin");
					this.OnRFoutpreserveLatencyReleaseMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutreleaseMode", DbType="NVarChar(50)")]
		public string RFoutreleaseMode
		{
			get
			{
				return this._RFoutreleaseMode;
			}
			set
			{
				if ((this._RFoutreleaseMode != value))
				{
					this.OnRFoutreleaseModeChanging(value);
					this.SendPropertyChanging();
					this._RFoutreleaseMode = value;
					this.SendPropertyChanged("RFoutreleaseMode");
					this.OnRFoutreleaseModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutsourceHost", DbType="NVarChar(50)")]
		public string RFoutsourceHost
		{
			get
			{
				return this._RFoutsourceHost;
			}
			set
			{
				if ((this._RFoutsourceHost != value))
				{
					this.OnRFoutsourceHostChanging(value);
					this.SendPropertyChanging();
					this._RFoutsourceHost = value;
					this.SendPropertyChanged("RFoutsourceHost");
					this.OnRFoutsourceHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutsourcePort", DbType="Int")]
		public System.Nullable<int> RFoutsourcePort
		{
			get
			{
				return this._RFoutsourcePort;
			}
			set
			{
				if ((this._RFoutsourcePort != value))
				{
					this.OnRFoutsourcePortChanging(value);
					this.SendPropertyChanging();
					this._RFoutsourcePort = value;
					this.SendPropertyChanged("RFoutsourcePort");
					this.OnRFoutsourcePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamBandwidth", DbType="Float")]
		public System.Nullable<double> RFoutstreamBandwidth
		{
			get
			{
				return this._RFoutstreamBandwidth;
			}
			set
			{
				if ((this._RFoutstreamBandwidth != value))
				{
					this.OnRFoutstreamBandwidthChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamBandwidth = value;
					this.SendPropertyChanged("RFoutstreamBandwidth");
					this.OnRFoutstreamBandwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamEnable", DbType="Bit")]
		public System.Nullable<bool> RFoutstreamEnable
		{
			get
			{
				return this._RFoutstreamEnable;
			}
			set
			{
				if ((this._RFoutstreamEnable != value))
				{
					this.OnRFoutstreamEnableChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamEnable = value;
					this.SendPropertyChanged("RFoutstreamEnable");
					this.OnRFoutstreamEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamId", DbType="Int")]
		public System.Nullable<int> RFoutstreamId
		{
			get
			{
				return this._RFoutstreamId;
			}
			set
			{
				if ((this._RFoutstreamId != value))
				{
					this.OnRFoutstreamIdChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamId = value;
					this.SendPropertyChanged("RFoutstreamId");
					this.OnRFoutstreamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamSampleRate", DbType="Float")]
		public System.Nullable<double> RFoutstreamSampleRate
		{
			get
			{
				return this._RFoutstreamSampleRate;
			}
			set
			{
				if ((this._RFoutstreamSampleRate != value))
				{
					this.OnRFoutstreamSampleRateChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamSampleRate = value;
					this.SendPropertyChanged("RFoutstreamSampleRate");
					this.OnRFoutstreamSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutunderflowCount", DbType="Int")]
		public System.Nullable<int> RFoutunderflowCount
		{
			get
			{
				return this._RFoutunderflowCount;
			}
			set
			{
				if ((this._RFoutunderflowCount != value))
				{
					this.OnRFoutunderflowCountChanging(value);
					this.SendPropertyChanging();
					this._RFoutunderflowCount = value;
					this.SendPropertyChanged("RFoutunderflowCount");
					this.OnRFoutunderflowCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamIrigLocked", DbType="Bit")]
		public System.Nullable<bool> RFoutupstreamIrigLocked
		{
			get
			{
				return this._RFoutupstreamIrigLocked;
			}
			set
			{
				if ((this._RFoutupstreamIrigLocked != value))
				{
					this.OnRFoutupstreamIrigLockedChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamIrigLocked = value;
					this.SendPropertyChanged("RFoutupstreamIrigLocked");
					this.OnRFoutupstreamIrigLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamOnePpsLocked", DbType="Bit")]
		public System.Nullable<bool> RFoutupstreamOnePpsLocked
		{
			get
			{
				return this._RFoutupstreamOnePpsLocked;
			}
			set
			{
				if ((this._RFoutupstreamOnePpsLocked != value))
				{
					this.OnRFoutupstreamOnePpsLockedChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamOnePpsLocked = value;
					this.SendPropertyChanged("RFoutupstreamOnePpsLocked");
					this.OnRFoutupstreamOnePpsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamPathGain", DbType="Float")]
		public System.Nullable<double> RFoutupstreamPathGain
		{
			get
			{
				return this._RFoutupstreamPathGain;
			}
			set
			{
				if ((this._RFoutupstreamPathGain != value))
				{
					this.OnRFoutupstreamPathGainChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamPathGain = value;
					this.SendPropertyChanged("RFoutupstreamPathGain");
					this.OnRFoutupstreamPathGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamTenMhzLocked", DbType="Bit")]
		public System.Nullable<bool> RFoutupstreamTenMhzLocked
		{
			get
			{
				return this._RFoutupstreamTenMhzLocked;
			}
			set
			{
				if ((this._RFoutupstreamTenMhzLocked != value))
				{
					this.OnRFoutupstreamTenMhzLockedChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamTenMhzLocked = value;
					this.SendPropertyChanged("RFoutupstreamTenMhzLocked");
					this.OnRFoutupstreamTenMhzLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutuseLocalReference", DbType="Bit")]
		public System.Nullable<bool> RFoutuseLocalReference
		{
			get
			{
				return this._RFoutuseLocalReference;
			}
			set
			{
				if ((this._RFoutuseLocalReference != value))
				{
					this.OnRFoutuseLocalReferenceChanging(value);
					this.SendPropertyChanging();
					this._RFoutuseLocalReference = value;
					this.SendPropertyChanged("RFoutuseLocalReference");
					this.OnRFoutuseLocalReferenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MetricSite2Summary")]
	public partial class MetricSite2Summary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _ExtDateStamp;
		
		private string _ExtSourceUnit;
		
		private string _ExtDestUnit;
		
		private string _ExtDirection;
		
		private System.Nullable<int> _ExtDisplayOrder;
		
		private System.Nullable<bool> _ExtCommError;
		
		private System.Nullable<bool> _ComActive;
		
		private string _ComAddress;
		
		private string _ComCompositeStatus;
		
		private string _ComCompositeStatusMsg;
		
		private string _ComContextPacketState;
		
		private System.Nullable<double> _ComcurrentGain;
		
		private System.Nullable<int> _ComdiscardedPackets;
		
		private System.Nullable<bool> _ComenableMulticastGroupSubscriptions;
		
		private System.Nullable<int> _ComfanSpeed;
		
		private string _ComgainMode;
		
		private string _Comgateway;
		
		private string _ComhealthStatus;
		
		private string _ComhealthStatusMsg;
		
		private System.Nullable<double> _CominputRfAdcSaturation;
		
		private System.Nullable<double> _CominputRfAdcSaturationPercent;
		
		private string _CominputRfBandwidth;
		
		private System.Nullable<double> _CominputRfCenterFrequency;
		
		private System.Nullable<double> _CominputRfPort1AdcSaturation;
		
		private System.Nullable<double> _CominputRfPort1AdcSaturationPercent;
		
		private System.Nullable<double> _CominputRfPort1MinimumGain;
		
		private System.Nullable<double> _CominputRfPort1Power;
		
		private System.Nullable<double> _CominputRfPort2AdcSaturation;
		
		private System.Nullable<double> _CominputRfPort2AdcSaturationPercent;
		
		private System.Nullable<double> _CominputRfPort2MinimumGain;
		
		private System.Nullable<double> _CominputRfPort2Power;
		
		private string _CominputRfPortSelect;
		
		private System.Nullable<double> _CominputRfPower;
		
		private System.Nullable<double> _CominputRfSampleRate;
		
		private System.Nullable<bool> _CominvertRfOutputSpectrum;
		
		private System.Nullable<bool> _ComirigDcLocked;
		
		private System.Nullable<bool> _ComirigLocked;
		
		private string _Comlabel;
		
		private string _ComlogLevel;
		
		private System.Nullable<double> _CommanualGain;
		
		private System.Nullable<double> _ComminimumGain;
		
		private string _CommoduleState;
		
		private string _CommoduleType;
		
		private string _ComntpStatus;
		
		private System.Nullable<bool> _ComonePpsPresent;
		
		private System.Nullable<double> _ComoutputAttenuation;
		
		private System.Nullable<double> _ComoutputRfCenterFrequency;
		
		private System.Nullable<double> _ComoutputRfDacSaturation;
		
		private System.Nullable<double> _ComoutputRfDacSaturationPercent;
		
		private System.Nullable<double> _ComoutputRfPort1DacSaturation;
		
		private System.Nullable<double> _ComoutputRfPort1DacSaturationPercent;
		
		private System.Nullable<double> _ComoutputRfPort1Power;
		
		private System.Nullable<double> _ComoutputRfPort2DacSaturation;
		
		private System.Nullable<double> _ComoutputRfPort2DacSaturationPercent;
		
		private System.Nullable<double> _ComoutputRfPort2Power;
		
		private string _ComoutputRfPortSelect;
		
		private System.Nullable<double> _ComoutputRfPower;
		
		private System.Nullable<double> _ComoverrideOutputFrequency;
		
		private System.Nullable<bool> _ComoverrideOutputFrequencyEnable;
		
		private System.Nullable<int> _CompollInterval;
		
		private System.Nullable<int> _ComposixNanoseconds;
		
		private System.Nullable<int> _ComposixSeconds;
		
		private System.Nullable<bool> _ComrebootRequired;
		
		private string _ComReplyWaitTime;
		
		private string _ComRequiredReadPrivilege;
		
		private string _ComRequiredWritePrivilege;
		
		private System.Nullable<bool> _ComRfOutputEnable;
		
		private string _ComRfOutputSource;
		
		private string _ComSecuritySource;
		
		private string _ComSerialNumber;
		
		private string _ComShortDescription;
		
		private System.Nullable<bool> _ComSimulate;
		
		private System.Nullable<bool> _ComSquelchEnabled;
		
		private System.Nullable<int> _ComSystemTemperature;
		
		private string _ComSystemTimeSource;
		
		private System.Nullable<bool> _ComTenMhzLocked;
		
		private string _ComVersion;
		
		private string _RFinname;
		
		private System.Nullable<double> _RFinbitRate;
		
		private System.Nullable<int> _RFindataSampleWidth;
		
		private string _RFindestinationHost;
		
		private System.Nullable<int> _RFindestinationPort;
		
		private System.Nullable<double> _RFinfrequencyOffset;
		
		private System.Nullable<double> _RFinmaximumPacketSize;
		
		private System.Nullable<double> _RFinmeasuredNetworkRate;
		
		private System.Nullable<double> _RFinmeasuredPacketRate;
		
		private System.Nullable<double> _RFinminimumProcessingDelay;
		
		private System.Nullable<double> _RFinpacketOverhead;
		
		private System.Nullable<bool> _RFinpfecEnable;
		
		private string _RFinrouteSearch;
		
		private System.Nullable<int> _RFinsourcePort;
		
		private System.Nullable<double> _RFinstreamBandwidth;
		
		private System.Nullable<bool> _RFinstreamEnable;
		
		private System.Nullable<double> _RFinstreamGain;
		
		private System.Nullable<int> _RFinstreamId;
		
		private System.Nullable<double> _RFinstreamSampleRate;
		
		private string _RFoutname;
		
		private System.Nullable<double> _RFoutcurrentBuffer;
		
		private System.Nullable<int> _RFoutdataSampleWidth;
		
		private string _RFoutdataSource;
		
		private System.Nullable<double> _RFoutdesiredBuffer;
		
		private System.Nullable<double> _RFoutdesiredDelay;
		
		private System.Nullable<int> _RFoutdestinationPort;
		
		private System.Nullable<int> _RFoutdroppedPackets;
		
		private System.Nullable<double> _RFoutfrequencyOffset;
		
		private System.Nullable<int> _RFoutgapCount;
		
		private System.Nullable<double> _RFoutmeasuredDelay;
		
		private System.Nullable<double> _RFoutmeasuredNetworkRate;
		
		private System.Nullable<double> _RFoutmeasuredPacketRate;
		
		private System.Nullable<double> _RFoutnetStreamGain;
		
		private System.Nullable<double> _RFoutnetworkDelay;
		
		private System.Nullable<double> _RFoutpacketOverhead;
		
		private string _RFoutpfecDecoderStatus;
		
		private System.Nullable<int> _RFoutpfecMissingSets;
		
		private System.Nullable<int> _RFoutpfecRepairedPackets;
		
		private System.Nullable<int> _RFoutpfecTotalPackets;
		
		private System.Nullable<int> _RFoutpfecUnrepairablePackets;
		
		private System.Nullable<bool> _RFoutpreserveLatency;
		
		private System.Nullable<int> _RFoutpreserveLatencyLatePackets;
		
		private System.Nullable<int> _RFoutpreserveLatencyMaxBurstLoss;
		
		private System.Nullable<int> _RFoutpreserveLatencyMissingPackets;
		
		private System.Nullable<int> _RFoutpreserveLatencyOutOfOrderPackets;
		
		private System.Nullable<int> _RFoutpreserveLatencyReleaseMargin;
		
		private string _RFoutreleaseMode;
		
		private string _RFoutsourceHost;
		
		private System.Nullable<int> _RFoutsourcePort;
		
		private System.Nullable<double> _RFoutstreamBandwidth;
		
		private System.Nullable<bool> _RFoutstreamEnable;
		
		private System.Nullable<int> _RFoutstreamId;
		
		private System.Nullable<double> _RFoutstreamSampleRate;
		
		private System.Nullable<int> _RFoutunderflowCount;
		
		private System.Nullable<bool> _RFoutupstreamIrigLocked;
		
		private System.Nullable<bool> _RFoutupstreamOnePpsLocked;
		
		private System.Nullable<double> _RFoutupstreamPathGain;
		
		private System.Nullable<bool> _RFoutupstreamTenMhzLocked;
		
		private System.Nullable<bool> _RFoutuseLocalReference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnExtDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnExtDateStampChanged();
    partial void OnExtSourceUnitChanging(string value);
    partial void OnExtSourceUnitChanged();
    partial void OnExtDestUnitChanging(string value);
    partial void OnExtDestUnitChanged();
    partial void OnExtDirectionChanging(string value);
    partial void OnExtDirectionChanged();
    partial void OnExtDisplayOrderChanging(System.Nullable<int> value);
    partial void OnExtDisplayOrderChanged();
    partial void OnExtCommErrorChanging(System.Nullable<bool> value);
    partial void OnExtCommErrorChanged();
    partial void OnComActiveChanging(System.Nullable<bool> value);
    partial void OnComActiveChanged();
    partial void OnComAddressChanging(string value);
    partial void OnComAddressChanged();
    partial void OnComCompositeStatusChanging(string value);
    partial void OnComCompositeStatusChanged();
    partial void OnComCompositeStatusMsgChanging(string value);
    partial void OnComCompositeStatusMsgChanged();
    partial void OnComContextPacketStateChanging(string value);
    partial void OnComContextPacketStateChanged();
    partial void OnComcurrentGainChanging(System.Nullable<double> value);
    partial void OnComcurrentGainChanged();
    partial void OnComdiscardedPacketsChanging(System.Nullable<int> value);
    partial void OnComdiscardedPacketsChanged();
    partial void OnComenableMulticastGroupSubscriptionsChanging(System.Nullable<bool> value);
    partial void OnComenableMulticastGroupSubscriptionsChanged();
    partial void OnComfanSpeedChanging(System.Nullable<int> value);
    partial void OnComfanSpeedChanged();
    partial void OnComgainModeChanging(string value);
    partial void OnComgainModeChanged();
    partial void OnComgatewayChanging(string value);
    partial void OnComgatewayChanged();
    partial void OnComhealthStatusChanging(string value);
    partial void OnComhealthStatusChanged();
    partial void OnComhealthStatusMsgChanging(string value);
    partial void OnComhealthStatusMsgChanged();
    partial void OnCominputRfAdcSaturationChanging(System.Nullable<double> value);
    partial void OnCominputRfAdcSaturationChanged();
    partial void OnCominputRfAdcSaturationPercentChanging(System.Nullable<double> value);
    partial void OnCominputRfAdcSaturationPercentChanged();
    partial void OnCominputRfBandwidthChanging(string value);
    partial void OnCominputRfBandwidthChanged();
    partial void OnCominputRfCenterFrequencyChanging(System.Nullable<double> value);
    partial void OnCominputRfCenterFrequencyChanged();
    partial void OnCominputRfPort1AdcSaturationChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1AdcSaturationChanged();
    partial void OnCominputRfPort1AdcSaturationPercentChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1AdcSaturationPercentChanged();
    partial void OnCominputRfPort1MinimumGainChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1MinimumGainChanged();
    partial void OnCominputRfPort1PowerChanging(System.Nullable<double> value);
    partial void OnCominputRfPort1PowerChanged();
    partial void OnCominputRfPort2AdcSaturationChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2AdcSaturationChanged();
    partial void OnCominputRfPort2AdcSaturationPercentChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2AdcSaturationPercentChanged();
    partial void OnCominputRfPort2MinimumGainChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2MinimumGainChanged();
    partial void OnCominputRfPort2PowerChanging(System.Nullable<double> value);
    partial void OnCominputRfPort2PowerChanged();
    partial void OnCominputRfPortSelectChanging(string value);
    partial void OnCominputRfPortSelectChanged();
    partial void OnCominputRfPowerChanging(System.Nullable<double> value);
    partial void OnCominputRfPowerChanged();
    partial void OnCominputRfSampleRateChanging(System.Nullable<double> value);
    partial void OnCominputRfSampleRateChanged();
    partial void OnCominvertRfOutputSpectrumChanging(System.Nullable<bool> value);
    partial void OnCominvertRfOutputSpectrumChanged();
    partial void OnComirigDcLockedChanging(System.Nullable<bool> value);
    partial void OnComirigDcLockedChanged();
    partial void OnComirigLockedChanging(System.Nullable<bool> value);
    partial void OnComirigLockedChanged();
    partial void OnComlabelChanging(string value);
    partial void OnComlabelChanged();
    partial void OnComlogLevelChanging(string value);
    partial void OnComlogLevelChanged();
    partial void OnCommanualGainChanging(System.Nullable<double> value);
    partial void OnCommanualGainChanged();
    partial void OnComminimumGainChanging(System.Nullable<double> value);
    partial void OnComminimumGainChanged();
    partial void OnCommoduleStateChanging(string value);
    partial void OnCommoduleStateChanged();
    partial void OnCommoduleTypeChanging(string value);
    partial void OnCommoduleTypeChanged();
    partial void OnComntpStatusChanging(string value);
    partial void OnComntpStatusChanged();
    partial void OnComonePpsPresentChanging(System.Nullable<bool> value);
    partial void OnComonePpsPresentChanged();
    partial void OnComoutputAttenuationChanging(System.Nullable<double> value);
    partial void OnComoutputAttenuationChanged();
    partial void OnComoutputRfCenterFrequencyChanging(System.Nullable<double> value);
    partial void OnComoutputRfCenterFrequencyChanged();
    partial void OnComoutputRfDacSaturationChanging(System.Nullable<double> value);
    partial void OnComoutputRfDacSaturationChanged();
    partial void OnComoutputRfDacSaturationPercentChanging(System.Nullable<double> value);
    partial void OnComoutputRfDacSaturationPercentChanged();
    partial void OnComoutputRfPort1DacSaturationChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort1DacSaturationChanged();
    partial void OnComoutputRfPort1DacSaturationPercentChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort1DacSaturationPercentChanged();
    partial void OnComoutputRfPort1PowerChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort1PowerChanged();
    partial void OnComoutputRfPort2DacSaturationChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort2DacSaturationChanged();
    partial void OnComoutputRfPort2DacSaturationPercentChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort2DacSaturationPercentChanged();
    partial void OnComoutputRfPort2PowerChanging(System.Nullable<double> value);
    partial void OnComoutputRfPort2PowerChanged();
    partial void OnComoutputRfPortSelectChanging(string value);
    partial void OnComoutputRfPortSelectChanged();
    partial void OnComoutputRfPowerChanging(System.Nullable<double> value);
    partial void OnComoutputRfPowerChanged();
    partial void OnComoverrideOutputFrequencyChanging(System.Nullable<double> value);
    partial void OnComoverrideOutputFrequencyChanged();
    partial void OnComoverrideOutputFrequencyEnableChanging(System.Nullable<bool> value);
    partial void OnComoverrideOutputFrequencyEnableChanged();
    partial void OnCompollIntervalChanging(System.Nullable<int> value);
    partial void OnCompollIntervalChanged();
    partial void OnComposixNanosecondsChanging(System.Nullable<int> value);
    partial void OnComposixNanosecondsChanged();
    partial void OnComposixSecondsChanging(System.Nullable<int> value);
    partial void OnComposixSecondsChanged();
    partial void OnComrebootRequiredChanging(System.Nullable<bool> value);
    partial void OnComrebootRequiredChanged();
    partial void OnComReplyWaitTimeChanging(string value);
    partial void OnComReplyWaitTimeChanged();
    partial void OnComRequiredReadPrivilegeChanging(string value);
    partial void OnComRequiredReadPrivilegeChanged();
    partial void OnComRequiredWritePrivilegeChanging(string value);
    partial void OnComRequiredWritePrivilegeChanged();
    partial void OnComRfOutputEnableChanging(System.Nullable<bool> value);
    partial void OnComRfOutputEnableChanged();
    partial void OnComRfOutputSourceChanging(string value);
    partial void OnComRfOutputSourceChanged();
    partial void OnComSecuritySourceChanging(string value);
    partial void OnComSecuritySourceChanged();
    partial void OnComSerialNumberChanging(string value);
    partial void OnComSerialNumberChanged();
    partial void OnComShortDescriptionChanging(string value);
    partial void OnComShortDescriptionChanged();
    partial void OnComSimulateChanging(System.Nullable<bool> value);
    partial void OnComSimulateChanged();
    partial void OnComSquelchEnabledChanging(System.Nullable<bool> value);
    partial void OnComSquelchEnabledChanged();
    partial void OnComSystemTemperatureChanging(System.Nullable<int> value);
    partial void OnComSystemTemperatureChanged();
    partial void OnComSystemTimeSourceChanging(string value);
    partial void OnComSystemTimeSourceChanged();
    partial void OnComTenMhzLockedChanging(System.Nullable<bool> value);
    partial void OnComTenMhzLockedChanged();
    partial void OnComVersionChanging(string value);
    partial void OnComVersionChanged();
    partial void OnRFinnameChanging(string value);
    partial void OnRFinnameChanged();
    partial void OnRFinbitRateChanging(System.Nullable<double> value);
    partial void OnRFinbitRateChanged();
    partial void OnRFindataSampleWidthChanging(System.Nullable<int> value);
    partial void OnRFindataSampleWidthChanged();
    partial void OnRFindestinationHostChanging(string value);
    partial void OnRFindestinationHostChanged();
    partial void OnRFindestinationPortChanging(System.Nullable<int> value);
    partial void OnRFindestinationPortChanged();
    partial void OnRFinfrequencyOffsetChanging(System.Nullable<double> value);
    partial void OnRFinfrequencyOffsetChanged();
    partial void OnRFinmaximumPacketSizeChanging(System.Nullable<double> value);
    partial void OnRFinmaximumPacketSizeChanged();
    partial void OnRFinmeasuredNetworkRateChanging(System.Nullable<double> value);
    partial void OnRFinmeasuredNetworkRateChanged();
    partial void OnRFinmeasuredPacketRateChanging(System.Nullable<double> value);
    partial void OnRFinmeasuredPacketRateChanged();
    partial void OnRFinminimumProcessingDelayChanging(System.Nullable<double> value);
    partial void OnRFinminimumProcessingDelayChanged();
    partial void OnRFinpacketOverheadChanging(System.Nullable<double> value);
    partial void OnRFinpacketOverheadChanged();
    partial void OnRFinpfecEnableChanging(System.Nullable<bool> value);
    partial void OnRFinpfecEnableChanged();
    partial void OnRFinrouteSearchChanging(string value);
    partial void OnRFinrouteSearchChanged();
    partial void OnRFinsourcePortChanging(System.Nullable<int> value);
    partial void OnRFinsourcePortChanged();
    partial void OnRFinstreamBandwidthChanging(System.Nullable<double> value);
    partial void OnRFinstreamBandwidthChanged();
    partial void OnRFinstreamEnableChanging(System.Nullable<bool> value);
    partial void OnRFinstreamEnableChanged();
    partial void OnRFinstreamGainChanging(System.Nullable<double> value);
    partial void OnRFinstreamGainChanged();
    partial void OnRFinstreamIdChanging(System.Nullable<int> value);
    partial void OnRFinstreamIdChanged();
    partial void OnRFinstreamSampleRateChanging(System.Nullable<double> value);
    partial void OnRFinstreamSampleRateChanged();
    partial void OnRFoutnameChanging(string value);
    partial void OnRFoutnameChanged();
    partial void OnRFoutcurrentBufferChanging(System.Nullable<double> value);
    partial void OnRFoutcurrentBufferChanged();
    partial void OnRFoutdataSampleWidthChanging(System.Nullable<int> value);
    partial void OnRFoutdataSampleWidthChanged();
    partial void OnRFoutdataSourceChanging(string value);
    partial void OnRFoutdataSourceChanged();
    partial void OnRFoutdesiredBufferChanging(System.Nullable<double> value);
    partial void OnRFoutdesiredBufferChanged();
    partial void OnRFoutdesiredDelayChanging(System.Nullable<double> value);
    partial void OnRFoutdesiredDelayChanged();
    partial void OnRFoutdestinationPortChanging(System.Nullable<int> value);
    partial void OnRFoutdestinationPortChanged();
    partial void OnRFoutdroppedPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutdroppedPacketsChanged();
    partial void OnRFoutfrequencyOffsetChanging(System.Nullable<double> value);
    partial void OnRFoutfrequencyOffsetChanged();
    partial void OnRFoutgapCountChanging(System.Nullable<int> value);
    partial void OnRFoutgapCountChanged();
    partial void OnRFoutmeasuredDelayChanging(System.Nullable<double> value);
    partial void OnRFoutmeasuredDelayChanged();
    partial void OnRFoutmeasuredNetworkRateChanging(System.Nullable<double> value);
    partial void OnRFoutmeasuredNetworkRateChanged();
    partial void OnRFoutmeasuredPacketRateChanging(System.Nullable<double> value);
    partial void OnRFoutmeasuredPacketRateChanged();
    partial void OnRFoutnetStreamGainChanging(System.Nullable<double> value);
    partial void OnRFoutnetStreamGainChanged();
    partial void OnRFoutnetworkDelayChanging(System.Nullable<double> value);
    partial void OnRFoutnetworkDelayChanged();
    partial void OnRFoutpacketOverheadChanging(System.Nullable<double> value);
    partial void OnRFoutpacketOverheadChanged();
    partial void OnRFoutpfecDecoderStatusChanging(string value);
    partial void OnRFoutpfecDecoderStatusChanged();
    partial void OnRFoutpfecMissingSetsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecMissingSetsChanged();
    partial void OnRFoutpfecRepairedPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecRepairedPacketsChanged();
    partial void OnRFoutpfecTotalPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecTotalPacketsChanged();
    partial void OnRFoutpfecUnrepairablePacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpfecUnrepairablePacketsChanged();
    partial void OnRFoutpreserveLatencyChanging(System.Nullable<bool> value);
    partial void OnRFoutpreserveLatencyChanged();
    partial void OnRFoutpreserveLatencyLatePacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyLatePacketsChanged();
    partial void OnRFoutpreserveLatencyMaxBurstLossChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyMaxBurstLossChanged();
    partial void OnRFoutpreserveLatencyMissingPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyMissingPacketsChanged();
    partial void OnRFoutpreserveLatencyOutOfOrderPacketsChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyOutOfOrderPacketsChanged();
    partial void OnRFoutpreserveLatencyReleaseMarginChanging(System.Nullable<int> value);
    partial void OnRFoutpreserveLatencyReleaseMarginChanged();
    partial void OnRFoutreleaseModeChanging(string value);
    partial void OnRFoutreleaseModeChanged();
    partial void OnRFoutsourceHostChanging(string value);
    partial void OnRFoutsourceHostChanged();
    partial void OnRFoutsourcePortChanging(System.Nullable<int> value);
    partial void OnRFoutsourcePortChanged();
    partial void OnRFoutstreamBandwidthChanging(System.Nullable<double> value);
    partial void OnRFoutstreamBandwidthChanged();
    partial void OnRFoutstreamEnableChanging(System.Nullable<bool> value);
    partial void OnRFoutstreamEnableChanged();
    partial void OnRFoutstreamIdChanging(System.Nullable<int> value);
    partial void OnRFoutstreamIdChanged();
    partial void OnRFoutstreamSampleRateChanging(System.Nullable<double> value);
    partial void OnRFoutstreamSampleRateChanged();
    partial void OnRFoutunderflowCountChanging(System.Nullable<int> value);
    partial void OnRFoutunderflowCountChanged();
    partial void OnRFoutupstreamIrigLockedChanging(System.Nullable<bool> value);
    partial void OnRFoutupstreamIrigLockedChanged();
    partial void OnRFoutupstreamOnePpsLockedChanging(System.Nullable<bool> value);
    partial void OnRFoutupstreamOnePpsLockedChanged();
    partial void OnRFoutupstreamPathGainChanging(System.Nullable<double> value);
    partial void OnRFoutupstreamPathGainChanged();
    partial void OnRFoutupstreamTenMhzLockedChanging(System.Nullable<bool> value);
    partial void OnRFoutupstreamTenMhzLockedChanged();
    partial void OnRFoutuseLocalReferenceChanging(System.Nullable<bool> value);
    partial void OnRFoutuseLocalReferenceChanged();
    #endregion
		
		public MetricSite2Summary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDateStamp", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ExtDateStamp
		{
			get
			{
				return this._ExtDateStamp;
			}
			set
			{
				if ((this._ExtDateStamp != value))
				{
					this.OnExtDateStampChanging(value);
					this.SendPropertyChanging();
					this._ExtDateStamp = value;
					this.SendPropertyChanged("ExtDateStamp");
					this.OnExtDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtSourceUnit", DbType="NVarChar(50)")]
		public string ExtSourceUnit
		{
			get
			{
				return this._ExtSourceUnit;
			}
			set
			{
				if ((this._ExtSourceUnit != value))
				{
					this.OnExtSourceUnitChanging(value);
					this.SendPropertyChanging();
					this._ExtSourceUnit = value;
					this.SendPropertyChanged("ExtSourceUnit");
					this.OnExtSourceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDestUnit", DbType="NVarChar(50)")]
		public string ExtDestUnit
		{
			get
			{
				return this._ExtDestUnit;
			}
			set
			{
				if ((this._ExtDestUnit != value))
				{
					this.OnExtDestUnitChanging(value);
					this.SendPropertyChanging();
					this._ExtDestUnit = value;
					this.SendPropertyChanged("ExtDestUnit");
					this.OnExtDestUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDirection", DbType="NVarChar(50)")]
		public string ExtDirection
		{
			get
			{
				return this._ExtDirection;
			}
			set
			{
				if ((this._ExtDirection != value))
				{
					this.OnExtDirectionChanging(value);
					this.SendPropertyChanging();
					this._ExtDirection = value;
					this.SendPropertyChanged("ExtDirection");
					this.OnExtDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDisplayOrder", DbType="Int")]
		public System.Nullable<int> ExtDisplayOrder
		{
			get
			{
				return this._ExtDisplayOrder;
			}
			set
			{
				if ((this._ExtDisplayOrder != value))
				{
					this.OnExtDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._ExtDisplayOrder = value;
					this.SendPropertyChanged("ExtDisplayOrder");
					this.OnExtDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtCommError", DbType="Bit")]
		public System.Nullable<bool> ExtCommError
		{
			get
			{
				return this._ExtCommError;
			}
			set
			{
				if ((this._ExtCommError != value))
				{
					this.OnExtCommErrorChanging(value);
					this.SendPropertyChanging();
					this._ExtCommError = value;
					this.SendPropertyChanged("ExtCommError");
					this.OnExtCommErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComActive", DbType="Bit")]
		public System.Nullable<bool> ComActive
		{
			get
			{
				return this._ComActive;
			}
			set
			{
				if ((this._ComActive != value))
				{
					this.OnComActiveChanging(value);
					this.SendPropertyChanging();
					this._ComActive = value;
					this.SendPropertyChanged("ComActive");
					this.OnComActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComAddress", DbType="NVarChar(50)")]
		public string ComAddress
		{
			get
			{
				return this._ComAddress;
			}
			set
			{
				if ((this._ComAddress != value))
				{
					this.OnComAddressChanging(value);
					this.SendPropertyChanging();
					this._ComAddress = value;
					this.SendPropertyChanged("ComAddress");
					this.OnComAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComCompositeStatus", DbType="NVarChar(50)")]
		public string ComCompositeStatus
		{
			get
			{
				return this._ComCompositeStatus;
			}
			set
			{
				if ((this._ComCompositeStatus != value))
				{
					this.OnComCompositeStatusChanging(value);
					this.SendPropertyChanging();
					this._ComCompositeStatus = value;
					this.SendPropertyChanged("ComCompositeStatus");
					this.OnComCompositeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComCompositeStatusMsg", DbType="NVarChar(512)")]
		public string ComCompositeStatusMsg
		{
			get
			{
				return this._ComCompositeStatusMsg;
			}
			set
			{
				if ((this._ComCompositeStatusMsg != value))
				{
					this.OnComCompositeStatusMsgChanging(value);
					this.SendPropertyChanging();
					this._ComCompositeStatusMsg = value;
					this.SendPropertyChanged("ComCompositeStatusMsg");
					this.OnComCompositeStatusMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComContextPacketState", DbType="NVarChar(100)")]
		public string ComContextPacketState
		{
			get
			{
				return this._ComContextPacketState;
			}
			set
			{
				if ((this._ComContextPacketState != value))
				{
					this.OnComContextPacketStateChanging(value);
					this.SendPropertyChanging();
					this._ComContextPacketState = value;
					this.SendPropertyChanged("ComContextPacketState");
					this.OnComContextPacketStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComcurrentGain", DbType="Float")]
		public System.Nullable<double> ComcurrentGain
		{
			get
			{
				return this._ComcurrentGain;
			}
			set
			{
				if ((this._ComcurrentGain != value))
				{
					this.OnComcurrentGainChanging(value);
					this.SendPropertyChanging();
					this._ComcurrentGain = value;
					this.SendPropertyChanged("ComcurrentGain");
					this.OnComcurrentGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComdiscardedPackets", DbType="Int")]
		public System.Nullable<int> ComdiscardedPackets
		{
			get
			{
				return this._ComdiscardedPackets;
			}
			set
			{
				if ((this._ComdiscardedPackets != value))
				{
					this.OnComdiscardedPacketsChanging(value);
					this.SendPropertyChanging();
					this._ComdiscardedPackets = value;
					this.SendPropertyChanged("ComdiscardedPackets");
					this.OnComdiscardedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComenableMulticastGroupSubscriptions", DbType="Bit")]
		public System.Nullable<bool> ComenableMulticastGroupSubscriptions
		{
			get
			{
				return this._ComenableMulticastGroupSubscriptions;
			}
			set
			{
				if ((this._ComenableMulticastGroupSubscriptions != value))
				{
					this.OnComenableMulticastGroupSubscriptionsChanging(value);
					this.SendPropertyChanging();
					this._ComenableMulticastGroupSubscriptions = value;
					this.SendPropertyChanged("ComenableMulticastGroupSubscriptions");
					this.OnComenableMulticastGroupSubscriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComfanSpeed", DbType="Int")]
		public System.Nullable<int> ComfanSpeed
		{
			get
			{
				return this._ComfanSpeed;
			}
			set
			{
				if ((this._ComfanSpeed != value))
				{
					this.OnComfanSpeedChanging(value);
					this.SendPropertyChanging();
					this._ComfanSpeed = value;
					this.SendPropertyChanged("ComfanSpeed");
					this.OnComfanSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComgainMode", DbType="NVarChar(50)")]
		public string ComgainMode
		{
			get
			{
				return this._ComgainMode;
			}
			set
			{
				if ((this._ComgainMode != value))
				{
					this.OnComgainModeChanging(value);
					this.SendPropertyChanging();
					this._ComgainMode = value;
					this.SendPropertyChanged("ComgainMode");
					this.OnComgainModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comgateway", DbType="NVarChar(50)")]
		public string Comgateway
		{
			get
			{
				return this._Comgateway;
			}
			set
			{
				if ((this._Comgateway != value))
				{
					this.OnComgatewayChanging(value);
					this.SendPropertyChanging();
					this._Comgateway = value;
					this.SendPropertyChanged("Comgateway");
					this.OnComgatewayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComhealthStatus", DbType="NVarChar(50)")]
		public string ComhealthStatus
		{
			get
			{
				return this._ComhealthStatus;
			}
			set
			{
				if ((this._ComhealthStatus != value))
				{
					this.OnComhealthStatusChanging(value);
					this.SendPropertyChanging();
					this._ComhealthStatus = value;
					this.SendPropertyChanged("ComhealthStatus");
					this.OnComhealthStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComhealthStatusMsg", DbType="NVarChar(512)")]
		public string ComhealthStatusMsg
		{
			get
			{
				return this._ComhealthStatusMsg;
			}
			set
			{
				if ((this._ComhealthStatusMsg != value))
				{
					this.OnComhealthStatusMsgChanging(value);
					this.SendPropertyChanging();
					this._ComhealthStatusMsg = value;
					this.SendPropertyChanged("ComhealthStatusMsg");
					this.OnComhealthStatusMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfAdcSaturation", DbType="Float")]
		public System.Nullable<double> CominputRfAdcSaturation
		{
			get
			{
				return this._CominputRfAdcSaturation;
			}
			set
			{
				if ((this._CominputRfAdcSaturation != value))
				{
					this.OnCominputRfAdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._CominputRfAdcSaturation = value;
					this.SendPropertyChanged("CominputRfAdcSaturation");
					this.OnCominputRfAdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfAdcSaturationPercent", DbType="Float")]
		public System.Nullable<double> CominputRfAdcSaturationPercent
		{
			get
			{
				return this._CominputRfAdcSaturationPercent;
			}
			set
			{
				if ((this._CominputRfAdcSaturationPercent != value))
				{
					this.OnCominputRfAdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._CominputRfAdcSaturationPercent = value;
					this.SendPropertyChanged("CominputRfAdcSaturationPercent");
					this.OnCominputRfAdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfBandwidth", DbType="NVarChar(50)")]
		public string CominputRfBandwidth
		{
			get
			{
				return this._CominputRfBandwidth;
			}
			set
			{
				if ((this._CominputRfBandwidth != value))
				{
					this.OnCominputRfBandwidthChanging(value);
					this.SendPropertyChanging();
					this._CominputRfBandwidth = value;
					this.SendPropertyChanged("CominputRfBandwidth");
					this.OnCominputRfBandwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfCenterFrequency", DbType="Float")]
		public System.Nullable<double> CominputRfCenterFrequency
		{
			get
			{
				return this._CominputRfCenterFrequency;
			}
			set
			{
				if ((this._CominputRfCenterFrequency != value))
				{
					this.OnCominputRfCenterFrequencyChanging(value);
					this.SendPropertyChanging();
					this._CominputRfCenterFrequency = value;
					this.SendPropertyChanged("CominputRfCenterFrequency");
					this.OnCominputRfCenterFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1AdcSaturation", DbType="Float")]
		public System.Nullable<double> CominputRfPort1AdcSaturation
		{
			get
			{
				return this._CominputRfPort1AdcSaturation;
			}
			set
			{
				if ((this._CominputRfPort1AdcSaturation != value))
				{
					this.OnCominputRfPort1AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1AdcSaturation = value;
					this.SendPropertyChanged("CominputRfPort1AdcSaturation");
					this.OnCominputRfPort1AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1AdcSaturationPercent", DbType="Float")]
		public System.Nullable<double> CominputRfPort1AdcSaturationPercent
		{
			get
			{
				return this._CominputRfPort1AdcSaturationPercent;
			}
			set
			{
				if ((this._CominputRfPort1AdcSaturationPercent != value))
				{
					this.OnCominputRfPort1AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1AdcSaturationPercent = value;
					this.SendPropertyChanged("CominputRfPort1AdcSaturationPercent");
					this.OnCominputRfPort1AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1MinimumGain", DbType="Float")]
		public System.Nullable<double> CominputRfPort1MinimumGain
		{
			get
			{
				return this._CominputRfPort1MinimumGain;
			}
			set
			{
				if ((this._CominputRfPort1MinimumGain != value))
				{
					this.OnCominputRfPort1MinimumGainChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1MinimumGain = value;
					this.SendPropertyChanged("CominputRfPort1MinimumGain");
					this.OnCominputRfPort1MinimumGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort1Power", DbType="Float")]
		public System.Nullable<double> CominputRfPort1Power
		{
			get
			{
				return this._CominputRfPort1Power;
			}
			set
			{
				if ((this._CominputRfPort1Power != value))
				{
					this.OnCominputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort1Power = value;
					this.SendPropertyChanged("CominputRfPort1Power");
					this.OnCominputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2AdcSaturation", DbType="Float")]
		public System.Nullable<double> CominputRfPort2AdcSaturation
		{
			get
			{
				return this._CominputRfPort2AdcSaturation;
			}
			set
			{
				if ((this._CominputRfPort2AdcSaturation != value))
				{
					this.OnCominputRfPort2AdcSaturationChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2AdcSaturation = value;
					this.SendPropertyChanged("CominputRfPort2AdcSaturation");
					this.OnCominputRfPort2AdcSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2AdcSaturationPercent", DbType="Float")]
		public System.Nullable<double> CominputRfPort2AdcSaturationPercent
		{
			get
			{
				return this._CominputRfPort2AdcSaturationPercent;
			}
			set
			{
				if ((this._CominputRfPort2AdcSaturationPercent != value))
				{
					this.OnCominputRfPort2AdcSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2AdcSaturationPercent = value;
					this.SendPropertyChanged("CominputRfPort2AdcSaturationPercent");
					this.OnCominputRfPort2AdcSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2MinimumGain", DbType="Float")]
		public System.Nullable<double> CominputRfPort2MinimumGain
		{
			get
			{
				return this._CominputRfPort2MinimumGain;
			}
			set
			{
				if ((this._CominputRfPort2MinimumGain != value))
				{
					this.OnCominputRfPort2MinimumGainChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2MinimumGain = value;
					this.SendPropertyChanged("CominputRfPort2MinimumGain");
					this.OnCominputRfPort2MinimumGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPort2Power", DbType="Float")]
		public System.Nullable<double> CominputRfPort2Power
		{
			get
			{
				return this._CominputRfPort2Power;
			}
			set
			{
				if ((this._CominputRfPort2Power != value))
				{
					this.OnCominputRfPort2PowerChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPort2Power = value;
					this.SendPropertyChanged("CominputRfPort2Power");
					this.OnCominputRfPort2PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPortSelect", DbType="NVarChar(50)")]
		public string CominputRfPortSelect
		{
			get
			{
				return this._CominputRfPortSelect;
			}
			set
			{
				if ((this._CominputRfPortSelect != value))
				{
					this.OnCominputRfPortSelectChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPortSelect = value;
					this.SendPropertyChanged("CominputRfPortSelect");
					this.OnCominputRfPortSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfPower", DbType="Float")]
		public System.Nullable<double> CominputRfPower
		{
			get
			{
				return this._CominputRfPower;
			}
			set
			{
				if ((this._CominputRfPower != value))
				{
					this.OnCominputRfPowerChanging(value);
					this.SendPropertyChanging();
					this._CominputRfPower = value;
					this.SendPropertyChanged("CominputRfPower");
					this.OnCominputRfPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominputRfSampleRate", DbType="Float")]
		public System.Nullable<double> CominputRfSampleRate
		{
			get
			{
				return this._CominputRfSampleRate;
			}
			set
			{
				if ((this._CominputRfSampleRate != value))
				{
					this.OnCominputRfSampleRateChanging(value);
					this.SendPropertyChanging();
					this._CominputRfSampleRate = value;
					this.SendPropertyChanged("CominputRfSampleRate");
					this.OnCominputRfSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CominvertRfOutputSpectrum", DbType="Bit")]
		public System.Nullable<bool> CominvertRfOutputSpectrum
		{
			get
			{
				return this._CominvertRfOutputSpectrum;
			}
			set
			{
				if ((this._CominvertRfOutputSpectrum != value))
				{
					this.OnCominvertRfOutputSpectrumChanging(value);
					this.SendPropertyChanging();
					this._CominvertRfOutputSpectrum = value;
					this.SendPropertyChanged("CominvertRfOutputSpectrum");
					this.OnCominvertRfOutputSpectrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComirigDcLocked", DbType="Bit")]
		public System.Nullable<bool> ComirigDcLocked
		{
			get
			{
				return this._ComirigDcLocked;
			}
			set
			{
				if ((this._ComirigDcLocked != value))
				{
					this.OnComirigDcLockedChanging(value);
					this.SendPropertyChanging();
					this._ComirigDcLocked = value;
					this.SendPropertyChanged("ComirigDcLocked");
					this.OnComirigDcLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComirigLocked", DbType="Bit")]
		public System.Nullable<bool> ComirigLocked
		{
			get
			{
				return this._ComirigLocked;
			}
			set
			{
				if ((this._ComirigLocked != value))
				{
					this.OnComirigLockedChanging(value);
					this.SendPropertyChanging();
					this._ComirigLocked = value;
					this.SendPropertyChanged("ComirigLocked");
					this.OnComirigLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comlabel", DbType="NVarChar(50)")]
		public string Comlabel
		{
			get
			{
				return this._Comlabel;
			}
			set
			{
				if ((this._Comlabel != value))
				{
					this.OnComlabelChanging(value);
					this.SendPropertyChanging();
					this._Comlabel = value;
					this.SendPropertyChanged("Comlabel");
					this.OnComlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComlogLevel", DbType="NVarChar(50)")]
		public string ComlogLevel
		{
			get
			{
				return this._ComlogLevel;
			}
			set
			{
				if ((this._ComlogLevel != value))
				{
					this.OnComlogLevelChanging(value);
					this.SendPropertyChanging();
					this._ComlogLevel = value;
					this.SendPropertyChanged("ComlogLevel");
					this.OnComlogLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanualGain", DbType="Float")]
		public System.Nullable<double> CommanualGain
		{
			get
			{
				return this._CommanualGain;
			}
			set
			{
				if ((this._CommanualGain != value))
				{
					this.OnCommanualGainChanging(value);
					this.SendPropertyChanging();
					this._CommanualGain = value;
					this.SendPropertyChanged("CommanualGain");
					this.OnCommanualGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComminimumGain", DbType="Float")]
		public System.Nullable<double> ComminimumGain
		{
			get
			{
				return this._ComminimumGain;
			}
			set
			{
				if ((this._ComminimumGain != value))
				{
					this.OnComminimumGainChanging(value);
					this.SendPropertyChanging();
					this._ComminimumGain = value;
					this.SendPropertyChanged("ComminimumGain");
					this.OnComminimumGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommoduleState", DbType="NVarChar(50)")]
		public string CommoduleState
		{
			get
			{
				return this._CommoduleState;
			}
			set
			{
				if ((this._CommoduleState != value))
				{
					this.OnCommoduleStateChanging(value);
					this.SendPropertyChanging();
					this._CommoduleState = value;
					this.SendPropertyChanged("CommoduleState");
					this.OnCommoduleStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommoduleType", DbType="NVarChar(50)")]
		public string CommoduleType
		{
			get
			{
				return this._CommoduleType;
			}
			set
			{
				if ((this._CommoduleType != value))
				{
					this.OnCommoduleTypeChanging(value);
					this.SendPropertyChanging();
					this._CommoduleType = value;
					this.SendPropertyChanged("CommoduleType");
					this.OnCommoduleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComntpStatus", DbType="NVarChar(50)")]
		public string ComntpStatus
		{
			get
			{
				return this._ComntpStatus;
			}
			set
			{
				if ((this._ComntpStatus != value))
				{
					this.OnComntpStatusChanging(value);
					this.SendPropertyChanging();
					this._ComntpStatus = value;
					this.SendPropertyChanged("ComntpStatus");
					this.OnComntpStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComonePpsPresent", DbType="Bit")]
		public System.Nullable<bool> ComonePpsPresent
		{
			get
			{
				return this._ComonePpsPresent;
			}
			set
			{
				if ((this._ComonePpsPresent != value))
				{
					this.OnComonePpsPresentChanging(value);
					this.SendPropertyChanging();
					this._ComonePpsPresent = value;
					this.SendPropertyChanged("ComonePpsPresent");
					this.OnComonePpsPresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputAttenuation", DbType="Float")]
		public System.Nullable<double> ComoutputAttenuation
		{
			get
			{
				return this._ComoutputAttenuation;
			}
			set
			{
				if ((this._ComoutputAttenuation != value))
				{
					this.OnComoutputAttenuationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputAttenuation = value;
					this.SendPropertyChanged("ComoutputAttenuation");
					this.OnComoutputAttenuationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfCenterFrequency", DbType="Float")]
		public System.Nullable<double> ComoutputRfCenterFrequency
		{
			get
			{
				return this._ComoutputRfCenterFrequency;
			}
			set
			{
				if ((this._ComoutputRfCenterFrequency != value))
				{
					this.OnComoutputRfCenterFrequencyChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfCenterFrequency = value;
					this.SendPropertyChanged("ComoutputRfCenterFrequency");
					this.OnComoutputRfCenterFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfDacSaturation", DbType="Float")]
		public System.Nullable<double> ComoutputRfDacSaturation
		{
			get
			{
				return this._ComoutputRfDacSaturation;
			}
			set
			{
				if ((this._ComoutputRfDacSaturation != value))
				{
					this.OnComoutputRfDacSaturationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfDacSaturation = value;
					this.SendPropertyChanged("ComoutputRfDacSaturation");
					this.OnComoutputRfDacSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfDacSaturationPercent", DbType="Float")]
		public System.Nullable<double> ComoutputRfDacSaturationPercent
		{
			get
			{
				return this._ComoutputRfDacSaturationPercent;
			}
			set
			{
				if ((this._ComoutputRfDacSaturationPercent != value))
				{
					this.OnComoutputRfDacSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfDacSaturationPercent = value;
					this.SendPropertyChanged("ComoutputRfDacSaturationPercent");
					this.OnComoutputRfDacSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort1DacSaturation", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort1DacSaturation
		{
			get
			{
				return this._ComoutputRfPort1DacSaturation;
			}
			set
			{
				if ((this._ComoutputRfPort1DacSaturation != value))
				{
					this.OnComoutputRfPort1DacSaturationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort1DacSaturation = value;
					this.SendPropertyChanged("ComoutputRfPort1DacSaturation");
					this.OnComoutputRfPort1DacSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort1DacSaturationPercent", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort1DacSaturationPercent
		{
			get
			{
				return this._ComoutputRfPort1DacSaturationPercent;
			}
			set
			{
				if ((this._ComoutputRfPort1DacSaturationPercent != value))
				{
					this.OnComoutputRfPort1DacSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort1DacSaturationPercent = value;
					this.SendPropertyChanged("ComoutputRfPort1DacSaturationPercent");
					this.OnComoutputRfPort1DacSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort1Power", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort1Power
		{
			get
			{
				return this._ComoutputRfPort1Power;
			}
			set
			{
				if ((this._ComoutputRfPort1Power != value))
				{
					this.OnComoutputRfPort1PowerChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort1Power = value;
					this.SendPropertyChanged("ComoutputRfPort1Power");
					this.OnComoutputRfPort1PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort2DacSaturation", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort2DacSaturation
		{
			get
			{
				return this._ComoutputRfPort2DacSaturation;
			}
			set
			{
				if ((this._ComoutputRfPort2DacSaturation != value))
				{
					this.OnComoutputRfPort2DacSaturationChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort2DacSaturation = value;
					this.SendPropertyChanged("ComoutputRfPort2DacSaturation");
					this.OnComoutputRfPort2DacSaturationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort2DacSaturationPercent", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort2DacSaturationPercent
		{
			get
			{
				return this._ComoutputRfPort2DacSaturationPercent;
			}
			set
			{
				if ((this._ComoutputRfPort2DacSaturationPercent != value))
				{
					this.OnComoutputRfPort2DacSaturationPercentChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort2DacSaturationPercent = value;
					this.SendPropertyChanged("ComoutputRfPort2DacSaturationPercent");
					this.OnComoutputRfPort2DacSaturationPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPort2Power", DbType="Float")]
		public System.Nullable<double> ComoutputRfPort2Power
		{
			get
			{
				return this._ComoutputRfPort2Power;
			}
			set
			{
				if ((this._ComoutputRfPort2Power != value))
				{
					this.OnComoutputRfPort2PowerChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPort2Power = value;
					this.SendPropertyChanged("ComoutputRfPort2Power");
					this.OnComoutputRfPort2PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPortSelect", DbType="NVarChar(50)")]
		public string ComoutputRfPortSelect
		{
			get
			{
				return this._ComoutputRfPortSelect;
			}
			set
			{
				if ((this._ComoutputRfPortSelect != value))
				{
					this.OnComoutputRfPortSelectChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPortSelect = value;
					this.SendPropertyChanged("ComoutputRfPortSelect");
					this.OnComoutputRfPortSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoutputRfPower", DbType="Float")]
		public System.Nullable<double> ComoutputRfPower
		{
			get
			{
				return this._ComoutputRfPower;
			}
			set
			{
				if ((this._ComoutputRfPower != value))
				{
					this.OnComoutputRfPowerChanging(value);
					this.SendPropertyChanging();
					this._ComoutputRfPower = value;
					this.SendPropertyChanged("ComoutputRfPower");
					this.OnComoutputRfPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoverrideOutputFrequency", DbType="Float")]
		public System.Nullable<double> ComoverrideOutputFrequency
		{
			get
			{
				return this._ComoverrideOutputFrequency;
			}
			set
			{
				if ((this._ComoverrideOutputFrequency != value))
				{
					this.OnComoverrideOutputFrequencyChanging(value);
					this.SendPropertyChanging();
					this._ComoverrideOutputFrequency = value;
					this.SendPropertyChanged("ComoverrideOutputFrequency");
					this.OnComoverrideOutputFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComoverrideOutputFrequencyEnable", DbType="Bit")]
		public System.Nullable<bool> ComoverrideOutputFrequencyEnable
		{
			get
			{
				return this._ComoverrideOutputFrequencyEnable;
			}
			set
			{
				if ((this._ComoverrideOutputFrequencyEnable != value))
				{
					this.OnComoverrideOutputFrequencyEnableChanging(value);
					this.SendPropertyChanging();
					this._ComoverrideOutputFrequencyEnable = value;
					this.SendPropertyChanged("ComoverrideOutputFrequencyEnable");
					this.OnComoverrideOutputFrequencyEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompollInterval", DbType="Int")]
		public System.Nullable<int> CompollInterval
		{
			get
			{
				return this._CompollInterval;
			}
			set
			{
				if ((this._CompollInterval != value))
				{
					this.OnCompollIntervalChanging(value);
					this.SendPropertyChanging();
					this._CompollInterval = value;
					this.SendPropertyChanged("CompollInterval");
					this.OnCompollIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComposixNanoseconds", DbType="Int")]
		public System.Nullable<int> ComposixNanoseconds
		{
			get
			{
				return this._ComposixNanoseconds;
			}
			set
			{
				if ((this._ComposixNanoseconds != value))
				{
					this.OnComposixNanosecondsChanging(value);
					this.SendPropertyChanging();
					this._ComposixNanoseconds = value;
					this.SendPropertyChanged("ComposixNanoseconds");
					this.OnComposixNanosecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComposixSeconds", DbType="Int")]
		public System.Nullable<int> ComposixSeconds
		{
			get
			{
				return this._ComposixSeconds;
			}
			set
			{
				if ((this._ComposixSeconds != value))
				{
					this.OnComposixSecondsChanging(value);
					this.SendPropertyChanging();
					this._ComposixSeconds = value;
					this.SendPropertyChanged("ComposixSeconds");
					this.OnComposixSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComrebootRequired", DbType="Bit")]
		public System.Nullable<bool> ComrebootRequired
		{
			get
			{
				return this._ComrebootRequired;
			}
			set
			{
				if ((this._ComrebootRequired != value))
				{
					this.OnComrebootRequiredChanging(value);
					this.SendPropertyChanging();
					this._ComrebootRequired = value;
					this.SendPropertyChanged("ComrebootRequired");
					this.OnComrebootRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComReplyWaitTime", DbType="NVarChar(50)")]
		public string ComReplyWaitTime
		{
			get
			{
				return this._ComReplyWaitTime;
			}
			set
			{
				if ((this._ComReplyWaitTime != value))
				{
					this.OnComReplyWaitTimeChanging(value);
					this.SendPropertyChanging();
					this._ComReplyWaitTime = value;
					this.SendPropertyChanged("ComReplyWaitTime");
					this.OnComReplyWaitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRequiredReadPrivilege", DbType="NVarChar(50)")]
		public string ComRequiredReadPrivilege
		{
			get
			{
				return this._ComRequiredReadPrivilege;
			}
			set
			{
				if ((this._ComRequiredReadPrivilege != value))
				{
					this.OnComRequiredReadPrivilegeChanging(value);
					this.SendPropertyChanging();
					this._ComRequiredReadPrivilege = value;
					this.SendPropertyChanged("ComRequiredReadPrivilege");
					this.OnComRequiredReadPrivilegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRequiredWritePrivilege", DbType="NVarChar(50)")]
		public string ComRequiredWritePrivilege
		{
			get
			{
				return this._ComRequiredWritePrivilege;
			}
			set
			{
				if ((this._ComRequiredWritePrivilege != value))
				{
					this.OnComRequiredWritePrivilegeChanging(value);
					this.SendPropertyChanging();
					this._ComRequiredWritePrivilege = value;
					this.SendPropertyChanged("ComRequiredWritePrivilege");
					this.OnComRequiredWritePrivilegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRfOutputEnable", DbType="Bit")]
		public System.Nullable<bool> ComRfOutputEnable
		{
			get
			{
				return this._ComRfOutputEnable;
			}
			set
			{
				if ((this._ComRfOutputEnable != value))
				{
					this.OnComRfOutputEnableChanging(value);
					this.SendPropertyChanging();
					this._ComRfOutputEnable = value;
					this.SendPropertyChanged("ComRfOutputEnable");
					this.OnComRfOutputEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComRfOutputSource", DbType="NVarChar(50)")]
		public string ComRfOutputSource
		{
			get
			{
				return this._ComRfOutputSource;
			}
			set
			{
				if ((this._ComRfOutputSource != value))
				{
					this.OnComRfOutputSourceChanging(value);
					this.SendPropertyChanging();
					this._ComRfOutputSource = value;
					this.SendPropertyChanged("ComRfOutputSource");
					this.OnComRfOutputSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSecuritySource", DbType="NVarChar(50)")]
		public string ComSecuritySource
		{
			get
			{
				return this._ComSecuritySource;
			}
			set
			{
				if ((this._ComSecuritySource != value))
				{
					this.OnComSecuritySourceChanging(value);
					this.SendPropertyChanging();
					this._ComSecuritySource = value;
					this.SendPropertyChanged("ComSecuritySource");
					this.OnComSecuritySourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSerialNumber", DbType="NVarChar(50)")]
		public string ComSerialNumber
		{
			get
			{
				return this._ComSerialNumber;
			}
			set
			{
				if ((this._ComSerialNumber != value))
				{
					this.OnComSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._ComSerialNumber = value;
					this.SendPropertyChanged("ComSerialNumber");
					this.OnComSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComShortDescription", DbType="NVarChar(250)")]
		public string ComShortDescription
		{
			get
			{
				return this._ComShortDescription;
			}
			set
			{
				if ((this._ComShortDescription != value))
				{
					this.OnComShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ComShortDescription = value;
					this.SendPropertyChanged("ComShortDescription");
					this.OnComShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSimulate", DbType="Bit")]
		public System.Nullable<bool> ComSimulate
		{
			get
			{
				return this._ComSimulate;
			}
			set
			{
				if ((this._ComSimulate != value))
				{
					this.OnComSimulateChanging(value);
					this.SendPropertyChanging();
					this._ComSimulate = value;
					this.SendPropertyChanged("ComSimulate");
					this.OnComSimulateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSquelchEnabled", DbType="Bit")]
		public System.Nullable<bool> ComSquelchEnabled
		{
			get
			{
				return this._ComSquelchEnabled;
			}
			set
			{
				if ((this._ComSquelchEnabled != value))
				{
					this.OnComSquelchEnabledChanging(value);
					this.SendPropertyChanging();
					this._ComSquelchEnabled = value;
					this.SendPropertyChanged("ComSquelchEnabled");
					this.OnComSquelchEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSystemTemperature", DbType="Int")]
		public System.Nullable<int> ComSystemTemperature
		{
			get
			{
				return this._ComSystemTemperature;
			}
			set
			{
				if ((this._ComSystemTemperature != value))
				{
					this.OnComSystemTemperatureChanging(value);
					this.SendPropertyChanging();
					this._ComSystemTemperature = value;
					this.SendPropertyChanged("ComSystemTemperature");
					this.OnComSystemTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComSystemTimeSource", DbType="NVarChar(50)")]
		public string ComSystemTimeSource
		{
			get
			{
				return this._ComSystemTimeSource;
			}
			set
			{
				if ((this._ComSystemTimeSource != value))
				{
					this.OnComSystemTimeSourceChanging(value);
					this.SendPropertyChanging();
					this._ComSystemTimeSource = value;
					this.SendPropertyChanged("ComSystemTimeSource");
					this.OnComSystemTimeSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComTenMhzLocked", DbType="Bit")]
		public System.Nullable<bool> ComTenMhzLocked
		{
			get
			{
				return this._ComTenMhzLocked;
			}
			set
			{
				if ((this._ComTenMhzLocked != value))
				{
					this.OnComTenMhzLockedChanging(value);
					this.SendPropertyChanging();
					this._ComTenMhzLocked = value;
					this.SendPropertyChanged("ComTenMhzLocked");
					this.OnComTenMhzLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComVersion", DbType="NVarChar(50)")]
		public string ComVersion
		{
			get
			{
				return this._ComVersion;
			}
			set
			{
				if ((this._ComVersion != value))
				{
					this.OnComVersionChanging(value);
					this.SendPropertyChanging();
					this._ComVersion = value;
					this.SendPropertyChanged("ComVersion");
					this.OnComVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinname", DbType="NVarChar(50)")]
		public string RFinname
		{
			get
			{
				return this._RFinname;
			}
			set
			{
				if ((this._RFinname != value))
				{
					this.OnRFinnameChanging(value);
					this.SendPropertyChanging();
					this._RFinname = value;
					this.SendPropertyChanged("RFinname");
					this.OnRFinnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinbitRate", DbType="Float")]
		public System.Nullable<double> RFinbitRate
		{
			get
			{
				return this._RFinbitRate;
			}
			set
			{
				if ((this._RFinbitRate != value))
				{
					this.OnRFinbitRateChanging(value);
					this.SendPropertyChanging();
					this._RFinbitRate = value;
					this.SendPropertyChanged("RFinbitRate");
					this.OnRFinbitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFindataSampleWidth", DbType="Int")]
		public System.Nullable<int> RFindataSampleWidth
		{
			get
			{
				return this._RFindataSampleWidth;
			}
			set
			{
				if ((this._RFindataSampleWidth != value))
				{
					this.OnRFindataSampleWidthChanging(value);
					this.SendPropertyChanging();
					this._RFindataSampleWidth = value;
					this.SendPropertyChanged("RFindataSampleWidth");
					this.OnRFindataSampleWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFindestinationHost", DbType="NVarChar(50)")]
		public string RFindestinationHost
		{
			get
			{
				return this._RFindestinationHost;
			}
			set
			{
				if ((this._RFindestinationHost != value))
				{
					this.OnRFindestinationHostChanging(value);
					this.SendPropertyChanging();
					this._RFindestinationHost = value;
					this.SendPropertyChanged("RFindestinationHost");
					this.OnRFindestinationHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFindestinationPort", DbType="Int")]
		public System.Nullable<int> RFindestinationPort
		{
			get
			{
				return this._RFindestinationPort;
			}
			set
			{
				if ((this._RFindestinationPort != value))
				{
					this.OnRFindestinationPortChanging(value);
					this.SendPropertyChanging();
					this._RFindestinationPort = value;
					this.SendPropertyChanged("RFindestinationPort");
					this.OnRFindestinationPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinfrequencyOffset", DbType="Float")]
		public System.Nullable<double> RFinfrequencyOffset
		{
			get
			{
				return this._RFinfrequencyOffset;
			}
			set
			{
				if ((this._RFinfrequencyOffset != value))
				{
					this.OnRFinfrequencyOffsetChanging(value);
					this.SendPropertyChanging();
					this._RFinfrequencyOffset = value;
					this.SendPropertyChanged("RFinfrequencyOffset");
					this.OnRFinfrequencyOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinmaximumPacketSize", DbType="Float")]
		public System.Nullable<double> RFinmaximumPacketSize
		{
			get
			{
				return this._RFinmaximumPacketSize;
			}
			set
			{
				if ((this._RFinmaximumPacketSize != value))
				{
					this.OnRFinmaximumPacketSizeChanging(value);
					this.SendPropertyChanging();
					this._RFinmaximumPacketSize = value;
					this.SendPropertyChanged("RFinmaximumPacketSize");
					this.OnRFinmaximumPacketSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinmeasuredNetworkRate", DbType="Float")]
		public System.Nullable<double> RFinmeasuredNetworkRate
		{
			get
			{
				return this._RFinmeasuredNetworkRate;
			}
			set
			{
				if ((this._RFinmeasuredNetworkRate != value))
				{
					this.OnRFinmeasuredNetworkRateChanging(value);
					this.SendPropertyChanging();
					this._RFinmeasuredNetworkRate = value;
					this.SendPropertyChanged("RFinmeasuredNetworkRate");
					this.OnRFinmeasuredNetworkRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinmeasuredPacketRate", DbType="Float")]
		public System.Nullable<double> RFinmeasuredPacketRate
		{
			get
			{
				return this._RFinmeasuredPacketRate;
			}
			set
			{
				if ((this._RFinmeasuredPacketRate != value))
				{
					this.OnRFinmeasuredPacketRateChanging(value);
					this.SendPropertyChanging();
					this._RFinmeasuredPacketRate = value;
					this.SendPropertyChanged("RFinmeasuredPacketRate");
					this.OnRFinmeasuredPacketRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinminimumProcessingDelay", DbType="Float")]
		public System.Nullable<double> RFinminimumProcessingDelay
		{
			get
			{
				return this._RFinminimumProcessingDelay;
			}
			set
			{
				if ((this._RFinminimumProcessingDelay != value))
				{
					this.OnRFinminimumProcessingDelayChanging(value);
					this.SendPropertyChanging();
					this._RFinminimumProcessingDelay = value;
					this.SendPropertyChanged("RFinminimumProcessingDelay");
					this.OnRFinminimumProcessingDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinpacketOverhead", DbType="Float")]
		public System.Nullable<double> RFinpacketOverhead
		{
			get
			{
				return this._RFinpacketOverhead;
			}
			set
			{
				if ((this._RFinpacketOverhead != value))
				{
					this.OnRFinpacketOverheadChanging(value);
					this.SendPropertyChanging();
					this._RFinpacketOverhead = value;
					this.SendPropertyChanged("RFinpacketOverhead");
					this.OnRFinpacketOverheadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinpfecEnable", DbType="Bit")]
		public System.Nullable<bool> RFinpfecEnable
		{
			get
			{
				return this._RFinpfecEnable;
			}
			set
			{
				if ((this._RFinpfecEnable != value))
				{
					this.OnRFinpfecEnableChanging(value);
					this.SendPropertyChanging();
					this._RFinpfecEnable = value;
					this.SendPropertyChanged("RFinpfecEnable");
					this.OnRFinpfecEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinrouteSearch", DbType="NVarChar(50)")]
		public string RFinrouteSearch
		{
			get
			{
				return this._RFinrouteSearch;
			}
			set
			{
				if ((this._RFinrouteSearch != value))
				{
					this.OnRFinrouteSearchChanging(value);
					this.SendPropertyChanging();
					this._RFinrouteSearch = value;
					this.SendPropertyChanged("RFinrouteSearch");
					this.OnRFinrouteSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinsourcePort", DbType="Int")]
		public System.Nullable<int> RFinsourcePort
		{
			get
			{
				return this._RFinsourcePort;
			}
			set
			{
				if ((this._RFinsourcePort != value))
				{
					this.OnRFinsourcePortChanging(value);
					this.SendPropertyChanging();
					this._RFinsourcePort = value;
					this.SendPropertyChanged("RFinsourcePort");
					this.OnRFinsourcePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamBandwidth", DbType="Float")]
		public System.Nullable<double> RFinstreamBandwidth
		{
			get
			{
				return this._RFinstreamBandwidth;
			}
			set
			{
				if ((this._RFinstreamBandwidth != value))
				{
					this.OnRFinstreamBandwidthChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamBandwidth = value;
					this.SendPropertyChanged("RFinstreamBandwidth");
					this.OnRFinstreamBandwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamEnable", DbType="Bit")]
		public System.Nullable<bool> RFinstreamEnable
		{
			get
			{
				return this._RFinstreamEnable;
			}
			set
			{
				if ((this._RFinstreamEnable != value))
				{
					this.OnRFinstreamEnableChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamEnable = value;
					this.SendPropertyChanged("RFinstreamEnable");
					this.OnRFinstreamEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamGain", DbType="Float")]
		public System.Nullable<double> RFinstreamGain
		{
			get
			{
				return this._RFinstreamGain;
			}
			set
			{
				if ((this._RFinstreamGain != value))
				{
					this.OnRFinstreamGainChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamGain = value;
					this.SendPropertyChanged("RFinstreamGain");
					this.OnRFinstreamGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamId", DbType="Int")]
		public System.Nullable<int> RFinstreamId
		{
			get
			{
				return this._RFinstreamId;
			}
			set
			{
				if ((this._RFinstreamId != value))
				{
					this.OnRFinstreamIdChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamId = value;
					this.SendPropertyChanged("RFinstreamId");
					this.OnRFinstreamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFinstreamSampleRate", DbType="Float")]
		public System.Nullable<double> RFinstreamSampleRate
		{
			get
			{
				return this._RFinstreamSampleRate;
			}
			set
			{
				if ((this._RFinstreamSampleRate != value))
				{
					this.OnRFinstreamSampleRateChanging(value);
					this.SendPropertyChanging();
					this._RFinstreamSampleRate = value;
					this.SendPropertyChanged("RFinstreamSampleRate");
					this.OnRFinstreamSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutname", DbType="NVarChar(50)")]
		public string RFoutname
		{
			get
			{
				return this._RFoutname;
			}
			set
			{
				if ((this._RFoutname != value))
				{
					this.OnRFoutnameChanging(value);
					this.SendPropertyChanging();
					this._RFoutname = value;
					this.SendPropertyChanged("RFoutname");
					this.OnRFoutnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutcurrentBuffer", DbType="Float")]
		public System.Nullable<double> RFoutcurrentBuffer
		{
			get
			{
				return this._RFoutcurrentBuffer;
			}
			set
			{
				if ((this._RFoutcurrentBuffer != value))
				{
					this.OnRFoutcurrentBufferChanging(value);
					this.SendPropertyChanging();
					this._RFoutcurrentBuffer = value;
					this.SendPropertyChanged("RFoutcurrentBuffer");
					this.OnRFoutcurrentBufferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdataSampleWidth", DbType="Int")]
		public System.Nullable<int> RFoutdataSampleWidth
		{
			get
			{
				return this._RFoutdataSampleWidth;
			}
			set
			{
				if ((this._RFoutdataSampleWidth != value))
				{
					this.OnRFoutdataSampleWidthChanging(value);
					this.SendPropertyChanging();
					this._RFoutdataSampleWidth = value;
					this.SendPropertyChanged("RFoutdataSampleWidth");
					this.OnRFoutdataSampleWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdataSource", DbType="NVarChar(50)")]
		public string RFoutdataSource
		{
			get
			{
				return this._RFoutdataSource;
			}
			set
			{
				if ((this._RFoutdataSource != value))
				{
					this.OnRFoutdataSourceChanging(value);
					this.SendPropertyChanging();
					this._RFoutdataSource = value;
					this.SendPropertyChanged("RFoutdataSource");
					this.OnRFoutdataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdesiredBuffer", DbType="Float")]
		public System.Nullable<double> RFoutdesiredBuffer
		{
			get
			{
				return this._RFoutdesiredBuffer;
			}
			set
			{
				if ((this._RFoutdesiredBuffer != value))
				{
					this.OnRFoutdesiredBufferChanging(value);
					this.SendPropertyChanging();
					this._RFoutdesiredBuffer = value;
					this.SendPropertyChanged("RFoutdesiredBuffer");
					this.OnRFoutdesiredBufferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdesiredDelay", DbType="Float")]
		public System.Nullable<double> RFoutdesiredDelay
		{
			get
			{
				return this._RFoutdesiredDelay;
			}
			set
			{
				if ((this._RFoutdesiredDelay != value))
				{
					this.OnRFoutdesiredDelayChanging(value);
					this.SendPropertyChanging();
					this._RFoutdesiredDelay = value;
					this.SendPropertyChanged("RFoutdesiredDelay");
					this.OnRFoutdesiredDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdestinationPort", DbType="Int")]
		public System.Nullable<int> RFoutdestinationPort
		{
			get
			{
				return this._RFoutdestinationPort;
			}
			set
			{
				if ((this._RFoutdestinationPort != value))
				{
					this.OnRFoutdestinationPortChanging(value);
					this.SendPropertyChanging();
					this._RFoutdestinationPort = value;
					this.SendPropertyChanged("RFoutdestinationPort");
					this.OnRFoutdestinationPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutdroppedPackets", DbType="Int")]
		public System.Nullable<int> RFoutdroppedPackets
		{
			get
			{
				return this._RFoutdroppedPackets;
			}
			set
			{
				if ((this._RFoutdroppedPackets != value))
				{
					this.OnRFoutdroppedPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutdroppedPackets = value;
					this.SendPropertyChanged("RFoutdroppedPackets");
					this.OnRFoutdroppedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutfrequencyOffset", DbType="Float")]
		public System.Nullable<double> RFoutfrequencyOffset
		{
			get
			{
				return this._RFoutfrequencyOffset;
			}
			set
			{
				if ((this._RFoutfrequencyOffset != value))
				{
					this.OnRFoutfrequencyOffsetChanging(value);
					this.SendPropertyChanging();
					this._RFoutfrequencyOffset = value;
					this.SendPropertyChanged("RFoutfrequencyOffset");
					this.OnRFoutfrequencyOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutgapCount", DbType="Int")]
		public System.Nullable<int> RFoutgapCount
		{
			get
			{
				return this._RFoutgapCount;
			}
			set
			{
				if ((this._RFoutgapCount != value))
				{
					this.OnRFoutgapCountChanging(value);
					this.SendPropertyChanging();
					this._RFoutgapCount = value;
					this.SendPropertyChanged("RFoutgapCount");
					this.OnRFoutgapCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutmeasuredDelay", DbType="Float")]
		public System.Nullable<double> RFoutmeasuredDelay
		{
			get
			{
				return this._RFoutmeasuredDelay;
			}
			set
			{
				if ((this._RFoutmeasuredDelay != value))
				{
					this.OnRFoutmeasuredDelayChanging(value);
					this.SendPropertyChanging();
					this._RFoutmeasuredDelay = value;
					this.SendPropertyChanged("RFoutmeasuredDelay");
					this.OnRFoutmeasuredDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutmeasuredNetworkRate", DbType="Float")]
		public System.Nullable<double> RFoutmeasuredNetworkRate
		{
			get
			{
				return this._RFoutmeasuredNetworkRate;
			}
			set
			{
				if ((this._RFoutmeasuredNetworkRate != value))
				{
					this.OnRFoutmeasuredNetworkRateChanging(value);
					this.SendPropertyChanging();
					this._RFoutmeasuredNetworkRate = value;
					this.SendPropertyChanged("RFoutmeasuredNetworkRate");
					this.OnRFoutmeasuredNetworkRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutmeasuredPacketRate", DbType="Float")]
		public System.Nullable<double> RFoutmeasuredPacketRate
		{
			get
			{
				return this._RFoutmeasuredPacketRate;
			}
			set
			{
				if ((this._RFoutmeasuredPacketRate != value))
				{
					this.OnRFoutmeasuredPacketRateChanging(value);
					this.SendPropertyChanging();
					this._RFoutmeasuredPacketRate = value;
					this.SendPropertyChanged("RFoutmeasuredPacketRate");
					this.OnRFoutmeasuredPacketRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutnetStreamGain", DbType="Float")]
		public System.Nullable<double> RFoutnetStreamGain
		{
			get
			{
				return this._RFoutnetStreamGain;
			}
			set
			{
				if ((this._RFoutnetStreamGain != value))
				{
					this.OnRFoutnetStreamGainChanging(value);
					this.SendPropertyChanging();
					this._RFoutnetStreamGain = value;
					this.SendPropertyChanged("RFoutnetStreamGain");
					this.OnRFoutnetStreamGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutnetworkDelay", DbType="Float")]
		public System.Nullable<double> RFoutnetworkDelay
		{
			get
			{
				return this._RFoutnetworkDelay;
			}
			set
			{
				if ((this._RFoutnetworkDelay != value))
				{
					this.OnRFoutnetworkDelayChanging(value);
					this.SendPropertyChanging();
					this._RFoutnetworkDelay = value;
					this.SendPropertyChanged("RFoutnetworkDelay");
					this.OnRFoutnetworkDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpacketOverhead", DbType="Float")]
		public System.Nullable<double> RFoutpacketOverhead
		{
			get
			{
				return this._RFoutpacketOverhead;
			}
			set
			{
				if ((this._RFoutpacketOverhead != value))
				{
					this.OnRFoutpacketOverheadChanging(value);
					this.SendPropertyChanging();
					this._RFoutpacketOverhead = value;
					this.SendPropertyChanged("RFoutpacketOverhead");
					this.OnRFoutpacketOverheadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecDecoderStatus", DbType="NVarChar(50)")]
		public string RFoutpfecDecoderStatus
		{
			get
			{
				return this._RFoutpfecDecoderStatus;
			}
			set
			{
				if ((this._RFoutpfecDecoderStatus != value))
				{
					this.OnRFoutpfecDecoderStatusChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecDecoderStatus = value;
					this.SendPropertyChanged("RFoutpfecDecoderStatus");
					this.OnRFoutpfecDecoderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecMissingSets", DbType="Int")]
		public System.Nullable<int> RFoutpfecMissingSets
		{
			get
			{
				return this._RFoutpfecMissingSets;
			}
			set
			{
				if ((this._RFoutpfecMissingSets != value))
				{
					this.OnRFoutpfecMissingSetsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecMissingSets = value;
					this.SendPropertyChanged("RFoutpfecMissingSets");
					this.OnRFoutpfecMissingSetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecRepairedPackets", DbType="Int")]
		public System.Nullable<int> RFoutpfecRepairedPackets
		{
			get
			{
				return this._RFoutpfecRepairedPackets;
			}
			set
			{
				if ((this._RFoutpfecRepairedPackets != value))
				{
					this.OnRFoutpfecRepairedPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecRepairedPackets = value;
					this.SendPropertyChanged("RFoutpfecRepairedPackets");
					this.OnRFoutpfecRepairedPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecTotalPackets", DbType="Int")]
		public System.Nullable<int> RFoutpfecTotalPackets
		{
			get
			{
				return this._RFoutpfecTotalPackets;
			}
			set
			{
				if ((this._RFoutpfecTotalPackets != value))
				{
					this.OnRFoutpfecTotalPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecTotalPackets = value;
					this.SendPropertyChanged("RFoutpfecTotalPackets");
					this.OnRFoutpfecTotalPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpfecUnrepairablePackets", DbType="Int")]
		public System.Nullable<int> RFoutpfecUnrepairablePackets
		{
			get
			{
				return this._RFoutpfecUnrepairablePackets;
			}
			set
			{
				if ((this._RFoutpfecUnrepairablePackets != value))
				{
					this.OnRFoutpfecUnrepairablePacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpfecUnrepairablePackets = value;
					this.SendPropertyChanged("RFoutpfecUnrepairablePackets");
					this.OnRFoutpfecUnrepairablePacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatency", DbType="Bit")]
		public System.Nullable<bool> RFoutpreserveLatency
		{
			get
			{
				return this._RFoutpreserveLatency;
			}
			set
			{
				if ((this._RFoutpreserveLatency != value))
				{
					this.OnRFoutpreserveLatencyChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatency = value;
					this.SendPropertyChanged("RFoutpreserveLatency");
					this.OnRFoutpreserveLatencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyLatePackets", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyLatePackets
		{
			get
			{
				return this._RFoutpreserveLatencyLatePackets;
			}
			set
			{
				if ((this._RFoutpreserveLatencyLatePackets != value))
				{
					this.OnRFoutpreserveLatencyLatePacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyLatePackets = value;
					this.SendPropertyChanged("RFoutpreserveLatencyLatePackets");
					this.OnRFoutpreserveLatencyLatePacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyMaxBurstLoss", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyMaxBurstLoss
		{
			get
			{
				return this._RFoutpreserveLatencyMaxBurstLoss;
			}
			set
			{
				if ((this._RFoutpreserveLatencyMaxBurstLoss != value))
				{
					this.OnRFoutpreserveLatencyMaxBurstLossChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyMaxBurstLoss = value;
					this.SendPropertyChanged("RFoutpreserveLatencyMaxBurstLoss");
					this.OnRFoutpreserveLatencyMaxBurstLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyMissingPackets", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyMissingPackets
		{
			get
			{
				return this._RFoutpreserveLatencyMissingPackets;
			}
			set
			{
				if ((this._RFoutpreserveLatencyMissingPackets != value))
				{
					this.OnRFoutpreserveLatencyMissingPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyMissingPackets = value;
					this.SendPropertyChanged("RFoutpreserveLatencyMissingPackets");
					this.OnRFoutpreserveLatencyMissingPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyOutOfOrderPackets", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyOutOfOrderPackets
		{
			get
			{
				return this._RFoutpreserveLatencyOutOfOrderPackets;
			}
			set
			{
				if ((this._RFoutpreserveLatencyOutOfOrderPackets != value))
				{
					this.OnRFoutpreserveLatencyOutOfOrderPacketsChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyOutOfOrderPackets = value;
					this.SendPropertyChanged("RFoutpreserveLatencyOutOfOrderPackets");
					this.OnRFoutpreserveLatencyOutOfOrderPacketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutpreserveLatencyReleaseMargin", DbType="Int")]
		public System.Nullable<int> RFoutpreserveLatencyReleaseMargin
		{
			get
			{
				return this._RFoutpreserveLatencyReleaseMargin;
			}
			set
			{
				if ((this._RFoutpreserveLatencyReleaseMargin != value))
				{
					this.OnRFoutpreserveLatencyReleaseMarginChanging(value);
					this.SendPropertyChanging();
					this._RFoutpreserveLatencyReleaseMargin = value;
					this.SendPropertyChanged("RFoutpreserveLatencyReleaseMargin");
					this.OnRFoutpreserveLatencyReleaseMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutreleaseMode", DbType="NVarChar(50)")]
		public string RFoutreleaseMode
		{
			get
			{
				return this._RFoutreleaseMode;
			}
			set
			{
				if ((this._RFoutreleaseMode != value))
				{
					this.OnRFoutreleaseModeChanging(value);
					this.SendPropertyChanging();
					this._RFoutreleaseMode = value;
					this.SendPropertyChanged("RFoutreleaseMode");
					this.OnRFoutreleaseModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutsourceHost", DbType="NVarChar(50)")]
		public string RFoutsourceHost
		{
			get
			{
				return this._RFoutsourceHost;
			}
			set
			{
				if ((this._RFoutsourceHost != value))
				{
					this.OnRFoutsourceHostChanging(value);
					this.SendPropertyChanging();
					this._RFoutsourceHost = value;
					this.SendPropertyChanged("RFoutsourceHost");
					this.OnRFoutsourceHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutsourcePort", DbType="Int")]
		public System.Nullable<int> RFoutsourcePort
		{
			get
			{
				return this._RFoutsourcePort;
			}
			set
			{
				if ((this._RFoutsourcePort != value))
				{
					this.OnRFoutsourcePortChanging(value);
					this.SendPropertyChanging();
					this._RFoutsourcePort = value;
					this.SendPropertyChanged("RFoutsourcePort");
					this.OnRFoutsourcePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamBandwidth", DbType="Float")]
		public System.Nullable<double> RFoutstreamBandwidth
		{
			get
			{
				return this._RFoutstreamBandwidth;
			}
			set
			{
				if ((this._RFoutstreamBandwidth != value))
				{
					this.OnRFoutstreamBandwidthChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamBandwidth = value;
					this.SendPropertyChanged("RFoutstreamBandwidth");
					this.OnRFoutstreamBandwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamEnable", DbType="Bit")]
		public System.Nullable<bool> RFoutstreamEnable
		{
			get
			{
				return this._RFoutstreamEnable;
			}
			set
			{
				if ((this._RFoutstreamEnable != value))
				{
					this.OnRFoutstreamEnableChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamEnable = value;
					this.SendPropertyChanged("RFoutstreamEnable");
					this.OnRFoutstreamEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamId", DbType="Int")]
		public System.Nullable<int> RFoutstreamId
		{
			get
			{
				return this._RFoutstreamId;
			}
			set
			{
				if ((this._RFoutstreamId != value))
				{
					this.OnRFoutstreamIdChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamId = value;
					this.SendPropertyChanged("RFoutstreamId");
					this.OnRFoutstreamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutstreamSampleRate", DbType="Float")]
		public System.Nullable<double> RFoutstreamSampleRate
		{
			get
			{
				return this._RFoutstreamSampleRate;
			}
			set
			{
				if ((this._RFoutstreamSampleRate != value))
				{
					this.OnRFoutstreamSampleRateChanging(value);
					this.SendPropertyChanging();
					this._RFoutstreamSampleRate = value;
					this.SendPropertyChanged("RFoutstreamSampleRate");
					this.OnRFoutstreamSampleRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutunderflowCount", DbType="Int")]
		public System.Nullable<int> RFoutunderflowCount
		{
			get
			{
				return this._RFoutunderflowCount;
			}
			set
			{
				if ((this._RFoutunderflowCount != value))
				{
					this.OnRFoutunderflowCountChanging(value);
					this.SendPropertyChanging();
					this._RFoutunderflowCount = value;
					this.SendPropertyChanged("RFoutunderflowCount");
					this.OnRFoutunderflowCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamIrigLocked", DbType="Bit")]
		public System.Nullable<bool> RFoutupstreamIrigLocked
		{
			get
			{
				return this._RFoutupstreamIrigLocked;
			}
			set
			{
				if ((this._RFoutupstreamIrigLocked != value))
				{
					this.OnRFoutupstreamIrigLockedChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamIrigLocked = value;
					this.SendPropertyChanged("RFoutupstreamIrigLocked");
					this.OnRFoutupstreamIrigLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamOnePpsLocked", DbType="Bit")]
		public System.Nullable<bool> RFoutupstreamOnePpsLocked
		{
			get
			{
				return this._RFoutupstreamOnePpsLocked;
			}
			set
			{
				if ((this._RFoutupstreamOnePpsLocked != value))
				{
					this.OnRFoutupstreamOnePpsLockedChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamOnePpsLocked = value;
					this.SendPropertyChanged("RFoutupstreamOnePpsLocked");
					this.OnRFoutupstreamOnePpsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamPathGain", DbType="Float")]
		public System.Nullable<double> RFoutupstreamPathGain
		{
			get
			{
				return this._RFoutupstreamPathGain;
			}
			set
			{
				if ((this._RFoutupstreamPathGain != value))
				{
					this.OnRFoutupstreamPathGainChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamPathGain = value;
					this.SendPropertyChanged("RFoutupstreamPathGain");
					this.OnRFoutupstreamPathGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutupstreamTenMhzLocked", DbType="Bit")]
		public System.Nullable<bool> RFoutupstreamTenMhzLocked
		{
			get
			{
				return this._RFoutupstreamTenMhzLocked;
			}
			set
			{
				if ((this._RFoutupstreamTenMhzLocked != value))
				{
					this.OnRFoutupstreamTenMhzLockedChanging(value);
					this.SendPropertyChanging();
					this._RFoutupstreamTenMhzLocked = value;
					this.SendPropertyChanged("RFoutupstreamTenMhzLocked");
					this.OnRFoutupstreamTenMhzLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFoutuseLocalReference", DbType="Bit")]
		public System.Nullable<bool> RFoutuseLocalReference
		{
			get
			{
				return this._RFoutuseLocalReference;
			}
			set
			{
				if ((this._RFoutuseLocalReference != value))
				{
					this.OnRFoutuseLocalReferenceChanging(value);
					this.SendPropertyChanging();
					this._RFoutuseLocalReference = value;
					this.SendPropertyChanged("RFoutuseLocalReference");
					this.OnRFoutuseLocalReferenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
